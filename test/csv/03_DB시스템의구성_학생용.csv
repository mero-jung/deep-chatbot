데이터베이스 데이터베이스 3 회차 : DB 시스템 개요 김 은 경 ,1
DB 시스템 개요 2 학습목표 학습에 앞서 학습목표 동기유발 & 학습목표 학습내용 1. DB 시스템의 구성과 데이터 언어 학습목표 2. DBMS의 구성 1. DB 시스템의 구성 요소를 나열할 수 있다. 2. 데이터 언어의 종류를 나열할 수 있다.     3. DB 관리자의 주요 역할을 나열할 수 있다.  1. DBMS의 기능적 구성 요소를 나열할 수 있다.  2. DBMS의 구성 요소 각각의 역할을 설명할 수 있다.  ,1
DB 시스템 개요 3 Lesson.  DB 시스템의 구성과 데이터 언어 1. DB 시스템이란?  2. 데이터 언어 3. DB 관리자와 사용자 4. DB 컴퓨터 DB 시스템과 데이터 언어 ,1
DB 시스템 개요 4 DB 시스템이란?  1. DB 시스템이란?  (1) DB 시스템(DataBase System: DBS)의 정의 - “DB 시스템은 데이터를 DB에 저장하고  DBMS를 사용해서 필요한 정보를 생성하는 컴퓨터 중심의 시스템이다.” (2) DB 시스템의 구성 요소 No. 구성 요소 역할 1 데이터베이스(DB)  데이터를 저장한다.  2 데이터베이스 관리시스템 (DBMS) DB를 생성  관리  조작함으로써 사용자와 DB를 연결해 주는 소프트웨어이다. 3 데이터 언어 (Data Language)  DB 정의와 조작  제어를 위한 DB 전용 언어이다.  4 DB 사용자 데이터 언어를 사용해서 DB에 접근하는 사람으로  일 반 사용자와 응용 프로그래머  DB 관리자로 구분할 수 있다.  5 DB 컴퓨터 효율적인 DB 관리를 위해서 DB에 대한 연산을 전담하 는 DB 관리 전용 컴퓨터이다.  ,1
DB 시스템 개요 5 2. 데이터 언어 (1)  데이터 언어(Data Language)란?  - DB를 정의하고  조작  제어하기 위해서 사용하는 언어이다.      - 즉  사용자가 데이터에 접근하는 수단으로서  사용자와 DBMS 간의 통신 수단을 제공하는 것이다.  (2)  데이터 언어의 종류 ① 데이터 정의어(DDL: Data Definition Language) ② 데이터 조작어(DML: Data Manipulation Language) ③ 데이터 제어어(DCL: Data Control Language) (3)  데이터 언어의 완전성(Completeness of data language)이란?  - 데이터 언어가 반드시 갖추어야 할 필수 요건으로서  사용자가 원하는 어떤 데이터도 검색하고 처리할 수 있으며  어떤 연산도 표현할 수 있는 능력을 의미한다.  데이터 언어 ,1
DB 시스템 개요 6 (3)  데이터 정의어 1) 데이터 정의어(DDL: Data Definition Language)란? - DB 구조를 정의하거나 변경하기 위해서 사용하는 언어로서   DB 설계자 또는 DB 관리자가 DB 스키마를 정의하기 위해 사용한다. 2) 데이터 정의에 포함되는 내용 ① 논리적 데이터 구조의 정의 - 개념 스키마(스키마)와 외부 스키마(서브스키마) 명세 ② 물리적 데이터 구조의 정의 - 내부 스키마 명세 - 별도의 데이터 저장 정의어(Data Storage Definition Language: DSDL)를 사용해서 명세하는 경우도 있음 ③ 논리적 데이터 구조와 물리적 데이터 구조 간의 사상(Mapping) 정의 3) 데이터 정의의 저장 - DDL로 정의된 DB 스키마는 DBMS의 구성 요소 가운데 하나인 DDL 컴파일러가 컴파일해서 시스템 카탈로그(System Catalog) 또는 데이터 디렉토리(Data Dictionary)에 저장에 두고 필요할 때 참조한다.  데이터 언어 * 시스템 카탈로그(System Catalog) – DB에 포함된 모든 객체들에 대한 정의(Definition) 나 명세(Specification)에 대한 정보가 수록되어 있는 시스템 테이블로  데이터 사전 (Data Dictionary) 이라고도 칭한다. * 데이터 디렉토리(Data Directory) - DB에 저장된 데 이터를 참조하는데 필요한 정보 가 수록된 시스템 테이블이다. 심화 학습 #1 심화 학습 #2 ,1
DB 시스템 개요 7 [심화 학습 #1] 시스템 카탈로그와 데이터 디렉토리 (1) 시스템 카탈로그(System Catalog) - DB에 포함된 모든 객체들에 대한 정의(Definition)나 명세(Specification)에 대한 정보를 수록하는 시스템 테이블이다.  - 시스템 DB 또는 메타 데이터(Metadata)라고도 칭한다.  - DB 관리자가 주로 사용하는 도구로서  사용자와 시스템 모두 사용 가능하다.  - 데이터 사전(Data Dictionary)이라고도 칭한다.  (2)  데이터 디렉토리(Data Directory) - DB에 저장된 데이터를 참조(Reference)하는데 필요한 정보를 수록하는 시스템 테이블이다.  - 시스템만 사용할 수 있다.  [심화 학습]  ,1
DB 시스템 개요 8 [심화 학습 #2] 데이터 정의어의 상세 구분 ① DB를 ANSI/SPARC의 3단계로 엄격히 구분하는 시스템의 경우 - 외부 스키마 정의어와 개념 스키마 정의어  내부 스키마 정의어를 각각 제공해야 한다.  ② DB를 ANSI/SPARC의 3단계로 엄격히 구분하지 않는 시스템의 경우 - DDL을 외부 스키마와 개념 스키마를 정의(개체와 속성  관계  제약조건 및 스키마 간의 사상(Mapping) 등 포함)할 때 모두 사용한다.  ③ 개념 스키마와 내부 스키마를 분명히 구분하는 경우 - 내부 스키마 정의를 위해 별도의 데이터 저장 정의어(DSDL: Data Storage Definition Language) 를 사용한다.  ④ 외부 스키마와 개념 스키마를 분명히 구분하는 경우 - 외부 스키마를 정의할 때 대개 약간 확장된 DDL을 사용한다.  - 외부 스키마 대신 서브스키마(Subschema)라는 용어를 사용하는 시스템의 경우   스키마 DDL과 서브스키마 DDL로 구분한다.  - 외부 스키마는 응용 프로그램 안에 DDL 명령문으로 정의되는 경우가 많다.  [심화 학습]  ,1
DB 시스템 개요 9 (4) 데이터 조작어 1) 데이터 조작어(DML: Data Manipulation Language)란? - DB 사용자(응용 프로그램 포함)와 DBMS 사이의 통신 수단으로서   데이터 검색과 삽입  삭제  갱신과 같은 DB 연산을 처리한다.    2) 데이터 조작어의 종류 ① 절차적 DML ② 비절차적 DML 3) 절차적 DML이란? - 사용자가 무슨(What) 데이터를 어떻게(How) 접근해서 처리해야 하는지 기술해야 하는 저수준(Low level) 데이터 언어이다.  - 한번에 하나의 레코드(One record at a time)만 검색해서 호스트 언어로 전달해서 처리되는 특성이 있다.   따라서  독자적으로 사용하지 못하고  응용 프로그램 속에 삽입(embedded)되어 사용됨 - 호스트 언어로 작성된 응용 프로그램 안에 프로시저(Procedure) 호출문 형식으로 표현되며   DML 예비 컴파일러(Pre-compiler)에 의해서 별도로 컴파일 된다.  데이터 언어 ,1
DB 시스템 개요 10 4) 비절차적 DML이란? - 사용자가 무슨(What) 데이터를 원하는 지만 기술하고  어떻게(How) 접근해서 처리해야 하는지는 기술하지 않고 DBMS에게 위임하는 고급(High level) 데이터 언어이다.  - 한번에 여러 개의 레코드(Set of records at a time)를 처리할 수 있다.  - 단말기에서 일반 사용자가 대화식으로 사용할 수도 있고  응용 프로그램 속에 삽입해서 사용할 수도 있다.  - 독자적이고 대화식으로 사용하는 고급 명령어 형태의 데이터 조작어를 질의어(Query Language)라고 칭한다.   데이터 부속어(DSL  Data Sublanguage)  - 절차적이든 비절차적이든  호스트 프로그램 속에 삽입해서 사용하는 DML 명령어를 지칭한다.  데이터 언어 ,1
DB 시스템 개요 11 (5) 데이터 제어어 1) 데이터 제어어(DCL: Data Control Language)란? - 공용 DB의 관리를 위해서 데이터 제어를 정의하고 기술하는 언어로서    DB 관리를 목적으로 주로 DB  관리자가 사용한다.  2) 데이터 제어의 기능 ① 데이터 보안(Security) ② 데이터 무결성(Integrity) ③ 데이터 복구(Recovery) ④ 병행 수행 제어(Concurrency Control) [주의]  - 데이터 언어가 개념적으로는 DDL  DML  DCL로 구분되지만  현실적으로는 별도의 언어로 존재하는 것이 아니라  하나의 언어 안에 포함된 다른 명령어로서 기능적으로만 구분되는 것이 일반적이다.  데이터 언어 ,1
DB 시스템 개요 12 DB 사용자 * 질의어(Query Language) – 독 자적이고 대화식으로 사용하는 고급 명령어 형태의 독립된 데이 터 조작어이다.  * 호스트(Host) 언어 – 응용 프로 그램을 작성할 때 사용되는 범용 프로그래밍 언어이다.   3. DB 사용자 (1)  일반 사용자 - 대개 질의어(Query Language)를 사용해서 DB에 접근하는 사람으로  터미널 사용자(Terminal User) 또는 최종 사용자(End User)라고도 칭한다.  - DB에 대한 특별한 지식 없이  주로 데이터 검색 및 삽입  삭제  갱신을 목적으로 DB에 접근한다.  (2) 응용 프로그래머(Application Programmer) - 일반 사용자들이 보다 쉽게 DB에 접근할 수 있도록  업무 중심의 응용 프로그램을 개발하는데 참여하는 시스템 분석가나 프로그래머 등의 정보기술 전문가를 의미한다.  - C  Java 등과 같은 호스트(Host) 언어와 DML에 익숙하며  DB에 대한 기초 지식을 갖춘 프로그래밍 전문가들이다.  ,1
DB 시스템 개요 13 DB 사용자 (3)  DB 관리자(DBA: DB Administrator)  1) DB 관리자란? - DB 시스템이 기능을 원활히 수행할 수 있도록 관리를 책임지는 사람이다.  - 즉  DB 시스템을 총체적으로 감시하고 관리하는 책임과 권한을 갖고 있는 사람으로서  DB를 설계 및 구축하고  필요한 경우 DB의 변경 계획도 수립하는 역할을 한다.  2) DB 관리자의 주요 역할 ① DB 시스템 감시(Monitoring) 및 성능 분석 ② DB의 구성 요소 결정 및 스키마 정의 ③ DB의 저장 구조와 접근 방법 결정 ④ 보안 및 권한 부여 정책  데이터의 유효성 검사 방법 수립 ⑤ 백업(Backup) 및 복구(Recovery) 절차 수립 ⑥ DB의 무결성 유지를 위한 대책 수립 ⑦ DB 시스템의 성능 향상 및 새로운 요구에 대응한 DB 재구성 ⑧ 시스템 카탈로그의 관리 ⑨ 데이터 표현 및 시스템 문서화에 대한 표준 설정 ⑩ 사용자의 요구 및 불만 해소 등 ,1
DB 시스템 개요 14 DB 컴퓨터 * 펌웨어(Firmware) – 변경할 필 요가 없는 소프트웨어를 ROM 등에 고정시켜서 하드 웨어처럼 사용하는 것이다.   4. DB 컴퓨터 (1)  DB 컴퓨터란?    - 대규모 DB(VLDB: Very Large DataBase)를 보다 효율적으로 관리하기 위한 DB 관리 전용 컴퓨터로서   DB 머신(Machine)이라고도 칭한다.  (2) DB 컴퓨터의 특징 - 호스트 컴퓨터 후위에서 DB 관리 및 연산 수행 기능을 전담하는 특수 목적의 컴퓨터로서   일종의 후위 컴퓨터(Backend computer)이다.  - DB 관리 기능을 소프트웨어만으로 처리하는 것이 아니라  펌웨어(Firmware)나 하드웨어로 수행 하기 때문에 저비용으로 고성능을 달성할 수 있다.  - 후위 처리기(Backend processor)  고성능의 메인 메모리와 CPU  대용량 저장장치  병렬 처리 및 DB 연산 수행을 위한 특수 처리기 등으로 구성된다.   DB의 규모가 그리 크지 않는 경우에는 별도로 DB 컴퓨터를 사용하지 않을 때가 많다.  ,1
DB 시스템 개요 15 DB 컴퓨터 호스트 컴퓨터 DB 컴퓨터 인터페이스 일반 작업 처리기 DB 후위 처리기 특수 처리기 메모리 저장 DB 질의어 DML/ 응용프로그램 DML/ 응용프로그램 사용자 1 사용자 2 사용자 n … DB 컴퓨터 (후위 컴퓨터) [ DB 컴퓨터와 호스트 컴퓨터의 관계]  ,1
DB 시스템 개요 16 DB 컴퓨터 (3)  DB 컴퓨터의 주요 역할 ① DB 연산 기능 - 호스트 컴퓨터가 일반 사용자나 응용 프로그램으로부터 DB 접근 요청을 받아서 DB 컴퓨터로 전달하면  실제로 DB 컴퓨터가 데이터 검색 또는 삽입  삭제  갱신 등의 연산을 수행한다.  ② DB 관리 기능 - 데이터 접근 권한 확인  병행 수행 제어  데이터 복구  최적의 접근 경로 선정 등을 포함하는 데이터 관리 기능을 직접 수행한다.  ,1
DB 시스템 개요 17 Lesson.   DBMS의 구성 1. DBMS의 DB  연산 처리 방법 2. DBMS의 구성 요소 DBMS의 구성 ,1
DB 시스템 개요 18 1. DBMS의 DB  연산 처리 방법 DBMS의 DB  연산 처리 방법 (1) DBMS의 주요 기능 - DB 관리 및 사용자 요구를 처리하기 위한 연산을 수행해서 필요한 정보를 생성한다.  (2) DBMS의 연산 수행 절차 ① 데이터 언어로 작성된 사용자의 접근 요구(Access Request)를 접수해서 분석한다.  ② 시스템이 이해할 수 있는 형태로 변환한다.   ③ 외부/개념/내부 스키마 간의 사상(Mapping)을 수행해서 저장 DB에 접근한다.    ④ 저장된 목표 데이터에 대해 필요한 연산(Operation)을 실행한다.  ,1
DB 시스템 개요 19 2. DBMS의 구성 요소 DBMS의 구성 요소 (1) DBMS의 기능적 구성 요소 질의어 DML/응용프로그램 DDL/스키마 질의어 처리기 DML예비컴파일러 DDL 컴파일러 DML컴파일러 저장 데이터 관리자 일반 사용자 응용 프로그래머 DBMS DB 관리자 런타임 데이터베이스 처리기 트랜잭션 관리자 시스템 카탈로그 (데이터 사전) 저장 데이터베이스 ,1
DB 시스템 개요 20 DBMS의 구성 요소 (2) DDL 컴파일러(DDL Compiler)의 역할 - DDL로 정의된 스키마를 내부 형태로 변환해서 시스템 카탈로그에 저장한다.  시스템 카탈로그에 저장된 데이터를 메타 데이터(Metadata) 즉  데이터의 데이터라 칭함 - DDL 처리기(Processor)라고도 칭한다.  (3) 질의어 처리기(Query Processor)의 역할 - 터미널에서 일반 사용자가 입력한 질의문을 컴파일해서  DB에 접근하기 위한 오브젝트 코드 (Object Code)를 생성한다.  (4) DML 예비 컴파일러(Pre-compiler)의 역할 - 호스트 언어로 작성된 응용 프로그램에 삽입된 DML을 추출한 다음  그 자리에 함수 호출문 (Procedure Call Statement)을 삽입한다.  - 추출된 DML은 DML 컴파일러로 전달되고  수정된 응용 프로그램은 호스트 프로그래밍 언어의 컴파일러로 전달된다.  * 오브젝트 코드(Object Code)  – 원시 코드(Source Code) 가 컴파일러(Compiler)에 의해서 처리기(Processor)가 이해할 수 있는 명령어 형태 로 번역된 것이다.  ,1
DB 시스템 개요 21 DBMS의 구성 요소 (5) DML 컴파일러(DML Compiler)의 역할 - DML 명령어를 컴파일해서 오브젝트 코드로 변환한다.  - 이 오브젝트 코드는 호스트 프로그래밍 언어의 컴파일러에 의해 처리된 수정된 응용 프로그램의 오브젝트 코드와 연결되어 런타임 DB 처리기에 의해 실행된다.  - DML 처리기(Processor)라고도 칭한다.  (6) 런타임 DB 처리기(Runtime Database Processor)의 역할 - 실행 시간에 DB 접근을 관리한다.  - 여러 가지 DB 연산(Operations)을 저장 데이터 관리자(Stored Data Manager)를 통해서 수행한다.  ,1
DB 시스템 개요 22 DBMS의 구성 요소 (7)  트랜잭션 관리자(Transaction Manager)의 역할 - 데이터를 일관되게 변경하는 하나 이상의 DML 문장으로 구성된 트랜잭션(Transaction) 단위의 작업을 수행한다.  - 예를 들면  DB 접근 과정에서의 무결성(Integrity) 제약조건 검사  데이터에 대한 접근 권한 검사   여러 사용자의 요구를 동시에 처리하기 위한 병행 제어(Concurrency Control)  장애 발생 시 복구(Recovery) 작업 등을 수행한다.  (8) 저장 데이터 관리자(Stored Data Manager)의 역할 - 디스크에 저장되어 있는 사용자 DB나 시스템 카탈로그에 대한 접근을 제어한다.  - 다음과 같은 운영 체제의 기본 모듈(File Manager  Disk Manager)을 이용한다.  o 파일 관리자(File Manager) : 요구된 저장 레코드가 어떤 파일의 어떤 페이지에 있는지 결정한다.  o 디스크 관리자(Disk Manager) : 실제로 디스크와 메인 메모리 버퍼 간의 데이터 전송을 책임진다. 트랜잭션(Transaction)  - 데이 터를 일관되게 변경하는 하 나 이상의 데이터 조작어 (DML) 문장이다.  ,1
DB 시스템 개요 1. DB 시스템의 구성 요소 23 학습 요약 및 정리 학습 요약 및 정리 No. 구성 요소 역할 1 데이터베이스(DB)  데이터를 저장한다.  2 데이터베이스 관리시스템 (DBMS) DB를 생성  관리  조작함으로써 사용자와 DB를 연결해 주는 소프트웨어이다. 3 데이터 언어 (Data Language)  DB 정의와 조작  제어를 위한 DB 전용 언어이다.  4 DB 사용자 데이터 언어를 사용해서 DB에 접근하는 사람으로  일 반 사용자와 응용 프로그래머  DB 관리자로 구분할 수 있다.  5 DB 컴퓨터 효율적인 DB 관리를 위해서 DB에 대한 연산을 전담하 는 DB 관리 전용 컴퓨터이다.  ,1
DB 시스템 개요 24 학습 요약 및 정리 학습 요약 및 정리 2. 데이터 언어의 종류 ① 데이터 정의어(DDL: Data Definition Language) - DB 구조를 정의하거나 변경하기 위해서 사용하는 언어이다.  ② 데이터 조작어(DML: Data Manipulation Language) - DB 사용자(응용 프로그램 포함)와 DBMS 사이의 통신수단으로서   데이터 검색과 삽입  삭제  갱신과 같은 DB 연산을 처리한다.    ③ 데이터 제어어(DCL: Data Control Language) - 공용 DB의 관리를 위해 데이터 제어를 정의하고 기술하는 언어이다.  ,1
DB 시스템 개요 3. DB 관리자의 주요 역할 ① DB 시스템 감시(Monitoring) 및 성능 분석 ② DB의 구성 요소 결정 및 스키마 정의 ③ DB의 저장 구조와 접근 방법 결정 ④ 보안 및 권한 부여 정책  데이터의 유효성 검사 방법 수립 ⑤ 백업(Backup) 및 복구(Recovery) 절차 수립 ⑥ DB의 무결성 유지를 위한 대책 수립 ⑦ DB 시스템의 성능 향상 및 새로운 요구에 대응한 DB 재구성 ⑧ 시스템 카탈로그의 관리 ⑨ 데이터 표현 및 시스템 문서화에 대한 표준 설정 ⑩ 사용자의 요구 및 불만 해소 등 25 학습 요약 및 정리 학습 요약 및 정리 ,1
DB 시스템 개요 4. DBMS의 기능적 구성 요소와 그 역할 26 학습 요약 및 정리 학습 요약 및 정리 No. 구성 요소 역할 1 DDL 컴파일러 (DDL Compiler) DDL로 정의된 스키마를 내부 형태로 변환해서 시스템 카탈로그에 저장한다. 2 질의어 처리기 (Query Processor) 터미널에서 일반 사용자가 입력한 질의문을 컴파일해서   DB에 접근하기 위한 오브젝트 코드(Object Code)를 생성한다.  3 DML 예비 컴파일러 (DML Pre-Compiler) 호스트 언어로 작성된 응용 프로그램에 삽입된 DML을 추출한 다음  그 자리에 함수 호출문(Procedure Call  Statement)을 삽입한다.  4 DML 컴파일러 (DML Compiler)  DML 명령어를 컴파일해서 오브젝트 코드로 변환한다. 5 런타임 DB 처리기 (Runtime Database Processor) 실행 시간에 DB 접근을 관리한다.  6 트랜잭션 관리자 (Transaction Manager) 트랜잭션(Transaction) 단위의 작업을 수행한다.  7 저장 데이터 관리자 (Stored Data Manager)  디스크에 저장되어 있는 사용자 DB나 시스템 카탈로그 에 대한 접근을 제어한다.  ,1
