content,intent
데이터베이스 데이터베이스 1 회차 : 데이터베이스(DB) 개요 김 은 경 ,1
DB 개요 2 학습에 앞서 학습내용 학습내용과 학습목표 동기유발 & 학습목표 1. 데이터베이스의 기본 개념 학습목표 2.  데이터베이스의 필요성 1. 데이터베이스를 정의할 수 있다. 2. 데이터베이스의 정의에 함축된 4가지 개념을 설명할 수 있다.     1. 데이터베이스 구축의 필요성을 설명할 수 있다. 2. 데이터베이스의 2가지 개념적 구성 요소를 설명할 수 있다.  학습목표 ,1
DB 개요 3 Lesson. DB의 기본 개념 1. 데이터와 정보의 차이점 2. 데이터베이스의 정의 3. 데이터베이스의 특징 4. 데이터베이스의 출현 배경 이번 레슨에서는 데이터와 정보의 차이점을 이해하고  데이터베이스란 무엇이며  또 데이터베이스의 특징과 출현 배경에 대해 알아보도록 하겠습 니다. DB의 기본 개념 ,1
DB 개요 4 1. 데이터와 정보의 차이점 (1) 데이터(Data)란? - 데이터란 현실 세계에서 단순한 관찰이나 측정을 통해서 수집된 사실(Fact) 또는 값(Value)이 어떤 기준에 의해 정리되어 있는 것을 의미한다.  (2) 정보(Information)란?  - 정보란 어떤 상황에서 적절한 의사 결정을 할 수 있도록 지원하는 지식으로  컴퓨터 시스템과 같은 처리기를 통한 데이터의 유효한 해석이나 데이터 상호간의 관계를 의미한다. - 즉  정보는 데이터가 어떤 목적에 의해 해석되거나 가공된 형태를 의미한다. 데이터와 정보의 차이점 해석 or 가공 (컴퓨터 시스템) 정보 데이터 [제목] 데이터와 정보의 차이점 ,1
DB 개요 5 DB란?  2. 데이터베이스란?  (1) 데이터베이스(Database:  DB)의 정의 - 데이터베이스는 어느 한 조직의 다양한 응용 프로그램들이 공동으로 사용하는 데이터들을 통합하여 저장한 운영 데이터의 집합이다.  - 보다 쉽게 정의하면  사람들이 필요로 하는 데이터를 모아둔 것이다.   (2) DB 정의에 함축된 개념 ① DB는 공용 데이터(Shared Data)이다. - 한 조직의 여러 응용 프로그램이 공동으로 사용하는 것이다. - 즉  여러 사용자가 서로 다른 목적으로 공유한다. ② DB는 통합된 데이터(Integrated Data)이다. - 여러 부서에서 사용하는 데이터를 한 곳에 모아서 공동 관리하는 것이다. (기억장소 절약) - 원칙적으로 동일한 데이터의 중복을 허용하지 않지만  검색의 효율성을 위해서 최소한의 중복(Minimal Redundancy)을 허용하여 통합한다. ③ DB는 저장된 데이터(Stored Data)이다. - 컴퓨터가 접근할 수 있는 디스크와 같은 저장 매체에 저장된 것이다. ④ DB의 데이터는 운영 데이터(Operational Data)이다. - 조직의 운영에 기본적으로 반드시 필요한 데이터를 저장하는 것이다. - 즉  조직의 고유한 기능을 수행하는데 필수적인 데이터를 저장하는 것이다. - 일시적으로 필요한 임시 데이터나 단순한 입출력 데이터는 운영 데이터에 해당하지 않는다. 참고 심화학습 ,1
DB 개요 6 참고 [참고]  ‘데이터베이스’ 및 ‘데이터베이스 시스템’이란 용어의 기원 (1) 1963년 6월 미국 SDC(System Development Corporation)사가 개최한 제1차 심포지엄의 제목인 “컴퓨터 중심의 데이터베이스 개발과 관리(Development and Management of  a Computer- centered Data Base)”에서 데이터베이스란 용어가 공식적으로 처음 사용된 것으로 알려져 있다. - 이때의 데이터베이스는 저장장치에 저장된 파일을 의미하며  현재의 데이터베이스와는 차이가 있음 - 이때 데이터베이스의 영문 표기가 ‘Data Base’라는 두 단어로 표기되었다가  점차 한 단어인 ‘Database’로 통일되었음 (2) 1965년 9월 제2차 SDC 심포지엄의 제목인 “컴퓨터 중심의 데이터베이스 시스템(Computer- centered Data Base Systems)”에서 데이터베이스 시스템이란 용어가 공식적으로 처음 사용된 것으로 알려져 있다.  ,1
DB 개요 7 [심화 학습] 최소한의 중복(Minimal Redundancy)이란?  - DB는 원칙적으로 데이터의 중복된 저장을 허용하지 않지만  보다 효율적인 처리를 위해서 최소한 의 중복이 부득이한 경우가 있다.    예를 들면  학생 데이터에 ‘학과’가 포함되어 있고  학과 정보 데이터에도 ‘학과’가 포함되어 있으면 ‘학과’라는 데이터가 중복되었다고 생각할 수 있다. 하지만  이런 중복은 추후 어떤 학생이 속한 학과의 학과장이나 재학생 수를 검색하기 위한 부득이한 중복이므로  이런 중복을 최소한의 중복이라고 한다.    (최소한의 중복은 뒤에서 학습하게 될 “외래 키”와 밀접한 관련성이 있음)   [심화 학습] 터 - 최소한의 중복은 미리 파악해서 관리할 수 있으므로  통제된 중복(Controlled Redundancy이라고도 한다.    ,1
DB 개요 8 3. DB의 특징 ① 동시 공용(Concurrent Sharing) - 여러 응용 프로그램이나 사용자들이 서로 다른 목적으로 데이터를 동시에 사용할 수 있다. ② 지속적인 변화(Continuous Evolution) - DB에 저장된 데이터는 고정된 것이 아니며  삽입  삭제  갱신 등을 통해서 지속적으로 변화함으로써 현재의 정확한 데이터를 유지해야 한다.  ③ 실시간 접근성(Real-Time Accessibility) - 컴퓨터가 접근할 수 있는 기록 매체에 저장되어 관리되므로  언제든지 필요한 시점에 바로 접근 가능해야 한다. 즉  어떤 질의에 대해 실시간에 바로 응답해야 한다.  ④ 내용에 의한 참조(Content Reference) - 데이터가 저장된 주소나 위치가 아닌  데이터의 내용 즉  값(Value)에 의해서 참조된다. - 즉  사용자가 원하는 데이터의 조건을 명시하면  조건을 만족하는 레코드가 어디에 위치하든 접근 가능하다. ⑤ 데이터베이스 관리 시스템(Database Management System: DBMS)에 의한 관리 - DB의 구축 및 관리를 위해서 전용 소프트웨어인 DBMS가 필요하다. DB의 특징 ,1
DB 개요 9 4. DB의 출현 배경 (1)  데이터 저장 및 관리를 위한 2가지 방법 ① 파일 처리 시스템을 이용한다. ② 데이터베이스 관리시스템(DBMS)를 이용한다.  (2)  파일 처리 시스템의 특징 ① 데이터 종속성(Data Dependency) - 응용 프로그램과 데이터 간의 밀접한 연관성으로 인해   데이터를 저장한 파일 구조가 변경되면 응용 프로그램도 변경해야 한다.  ② 데이터 중복성(Data Redundancy) - 응용 프로그램의 독립적인 파일 관리로 인해  응용 프로그램 별로 독립된 파일을 가지므로 데이터의 중복 저장이 불가피하여 데이터 값의 불일치가 발생할 가능성이 매우 높다.                 DB의 출현 배경 데이터베이스는 왜 출현하게 되었을까요? DB(디비)의 출현 배경을 이해하기 위해서는  데이터를 저장하고 관리하는 또 다른 방법인 파일 관리 시 스템의 특징과 문제점을 이해할 필요가 있습니다. 파일 처리 시스템에는 어떤 문제점이 있는지 확인해 보세요.  * 파일 처리 시스템 - 각각의 응용 프로그램이 자신의 데이터 를 파일 형태로 별도로 관리하는   파일 중심의 데이터 처리 시스템 을 의미한다.  ,1
DB 개요 10 (3)  파일 처리 시스템의 문제점 ① 데이터의 중복 저장으로 인한 비효율성 - 여러 파일에 동일한 데이터가 중복될 가능성이 높으므로  저장공간의 낭비  유지·보수의 어려움  데이터 보안의 어려움 등이 유발된다.  예) ‘회원정보 관리 프로그램’의 데이터 파일과 ‘회원등급 관리 프로그램’의 데이터 파일에 회원번호와 이름  휴대폰 번호가 중복되어 있으므로  회원 수가 많을수록 기억공간의 낭비가 심화된다.  DB의 출현 배경 회원등급 관리 프로그램 회원등급 데이터파일 회원번호 회원이름 휴대폰 번호 누적포인터 등급 회원정보 관리 프로그램 회원정보 데이터파일 회원번호 회원이름 휴대폰 번호 취미 주소 직업 예 ,1
DB 개요 11 ② 데이터 일관성(Consistency) 유지의 어려움 - 동일한 데이터가 여러 파일에 흩어져 있으므로  시간이 지남에 따라 동일한 데이터가 서로 다른 값을 가질 가능성이 커진다.  예) 어떤 회원의 ‘휴대폰번호’가 두 개의 다른 데이터 파일에 저장되어 있는데  회원정보 관리 프로그램을 통해서만 휴대폰번호를 변경한 경우  양쪽 파일의 데이터 값이 서로 다르므로 데이터의 일관성이 유지되지 않는다. 그 결과  회원 등급이 변경되어 회원정보 관리 프로그램에서 휴대폰으로 문자를 보내면  변경 전의 휴대폰 번호로 문자를 보내게 되므로 문자가 제대로 전달되지 않는다.  DB의 출현 배경 데이터 일관성(Consistency) - 중복된 데이터의 일치성에 관한 문제 회원등급 관리 프로그램 회원등급 데이터파일 회원번호 회원이름 휴대폰 번호 . . .  등급 회원정보 관리 프로그램 회원정보 데이터파일 회원번호 회원이름 휴대폰 번호 . . .  주소 118382 박문수 010-2233-4456 . . .  서울시 118385 이나영 010-3213-3344 . . .  천안시 …  … … . . .  … 118382 박문수 019-3355-4456 . . .  3 118385 이나영 010-3213-3344 . . .  2 …  … … . . .  … 예 ,1
DB 개요 12 ③ 데이터 무결성(Integrity) 유지의 어려움 - 어떤 데이터가 반드시 만족해야 하는 무결성 제약조건을 일일이 프로그램에서 처리해야 하므로   프로그램에서 빠뜨린 경우 무결성을 유지하기 어렵다.  예) 어떤 회사에서 서류 전형을 통해서 면접 대상자를 선정했는데   이때 토익 성적이 700점 이상인 지원자만 선정했다. 그런데 면접 대상자 데이터를 입력하면서 실수로 한 지원자의 토익 점수를 75점(원래는 750점)으로 잘못 입력했다. 그 결과 토익 성적 700점 이상인 수험생 정보만 저장되어야 한다는 무결성 제약조건을 위반하게 된다.  DB의 출현 배경 * 데이터 무결성(Integrity) - 데이터 값이 미리 정의된 제약 조건을 만족하는지를 의미하는 정확성에 관한 문제 합격자 선발 프로그램 면접대상자 데이터파일 수험생번호 토익 성적 학점 … 10022 770 4.0 … 10032 75 3.7 … 10046 800 3.6 … 10078 780 3.8 … …  …  … … 원래 면접대상자 데이터 파일에 저장될 수 없는 데이터가 저장됨 심화 학습 예 ,1
DB 개요 13 - 파일 시스템에서 무결성 제약조건을 유지하려면 각각의 무결성 제약조건을 일일이 응용 프로그램에서 처리해야 한다. 예를 들면  면접 대상자 데이터 파일에 데이터를 저장하기 전에 응용 프로그램에서 IF문 등을 사용해서 토익 성적이 700점 이상인지를 먼저 확인한 다음  700점 이상인 경우에만 데이터 파일에 저장되도록 처리해야 한다.  [심화 학습]  심화 학습 [파일 시스템에서 무결성 유지 방법] - 데이터베이스를 정의할 때 무결성 제약조건(토익성적 >= 700)을 함께 정의하면  DB가 갱신될 때마다 DBMS가 자동으로 제약조건의 만족 여부를 검사하므로 응용 프로그램에서 별도로 처리할 필요가 없다.  [데이터베이스에서 무결성 유지 방법] ,1
DB 개요 14 ④ 데이터 공유의 어려움 - 데이터의 구조가 응용 프로그램마다 다르므로 데이터 파일이 동일한 데이터를 포함하고 있어도 데이터 공유가 어렵다.  예) 회원정보 관리 프로그램과 회원정보 분석 프로그램은 동일한 데이터를 사용하지만  회원이름과 직업의 필드 크기를 다르게 정의했기 때문에 데이터를 공유하기 어렵다.  DB의 출현 배경 1) 레코드(Record) – 하나 이상 의 필드(Field)로 구성된 정 보의 최소 단위로서  파일은 하나 이상의 레코드로 구성 된다. 2) 필드(Field) – 한 바이트 (Byte) 이상으로 구성된 논 리적인 데이터 단위로서  하 나 이상의 필드가 모여서 하 나의 레코드가 된다.   회원정보 관리 프로그램 회원정보관리 데이터파일 필드 구조 회원번호 숫자(8 Bytes) 회원이름 문자(8 Bytes) 휴대폰번호 문자(13 Bytes) 주소 문자(30 Bytes) 직업 문자(15 Bytes) 취미 문자(20 Bytes) 회원정보 분석 프로그램 회원정보분석 데이터파일 [회원정보관리 데이터파일의 레코드 구조] 필드 구조 회원번호 숫자(8 Bytes) 회원이름 문자(10 Bytes) 휴대폰번호 문자(13 Bytes) 주소 문자(30 Bytes) 직업 문자(20 Bytes) 취미 문자(20 Bytes) [회원정보분석 데이터파일의 레코드 구조] 예 ,1
DB 개요 15 (4)  DB 출현 배경과 파일 처리 시스템의 연관성 - 파일 처리 시스템의 여러 가지 문제점들을 해결하기 위해 DB가 출현했다고 볼 수 있다.  - 즉  DB는 데이터 종속성과 데이터 중복성을 해결하여  파일 처리 시스템의 여러 가지 문제점을 해결하고 구조적인 한계점을 극복하기 위해 고안된 것이다.  DB의 출현 배경 ü 주의 : DB를 구축하는 것이 모든 환경에서 적합한 것은 아니므로  DBMS와 파일 처리 시스템의 장단점을 잘 분석해서 선택해야 한다.  ,1
DB 개요 16 Lesson. 데이터베이스의 필요성 1. DB 구축의 필요성 2. DB의 장단점 3. DB의 개념적 구성 요소 4. DB의 저장 구조 DB의 필요성 ,1
DB 개요 17 1. DB 구축의 필요성 DB 구축의 필요성 (1) 기술적 측면에서의 필요성 ① 데이터의 중복으로 인한 데이터의 일관성 유지가 어렵다.  ② 데이터 접근에 대한 관리 및 통제가 필요하다. - 사용자 별로 접근 가능한 데이터를 제한할 필요가 있다. 예) 회사에서 일반 사원은 자신의 데이터만  관리자는 자기 부서의 모든 사원의 데이터에 접근할 수 있도록 통제한다. ③ 데이터 파일과 프로그램간의 종속성으로 인해 비효율성적이다. - 데이터 파일의 구조가 바뀔 때마다 프로그램을 수정해서 다시 컴파일 해야 하는 불편함이 있다. ④ 데이터가 여기 저기 흩어져 있으므로 보안 유지가 어렵다. - 데이터를 여러 곳에서 관리하다 보면  주요 데이터의 유출 위험이 커진다. (2) 조직적 측면에서의 필요성 ① 조직의 자산으로서 데이터를 관리할 필요가 있다.  ② 데이터의 공유가 필요하다. ③ 데이터의 일관성 및 무결성 유지가 필요하다. ④ 데이터의 최신성과 및 유용성을 유지할 필요가 있다. ,1
DB 개요 18 2. DB의 장단점 DB의 장단점 앞에서 언급했듯이 모든 환경에서 DB(디비)를 구축하는 것이 최선인 것은 아니므로  DB(디비)의 장단점을 잘 분석한 다음  DB(디비) 구축 여부를 판단해야 합니다.  (1) DB의 장점 ① 데이터의 공유가 가능하다. ② 데이터에 대한 접근을 통제할 수 있다. ③ 중복 데이터가 적어진다. ④ 효율적인 유지 보수가 가능하다. ⑤ 데이터의 일관성 유지가 가능하다. ⑥ 생산성이 향상된다. (2) DB의 단점 ① 초기 개발 비용이 많이 든다. ② DB 관리를 전담할 전문 인력(DB 관리자)이 필요하다.  ③ 적시에  또한 지속적인 유지보수가 수반되지 않으면 무용지물이 될 수 있다. ,1
DB 개요 19 3. DB의 개념적 구성 요소 (1) DB의 개념적 구성 요소란? - 사용자 관점에서 본 DB의 구성 요소를 의미하며  개체(Entity)와 관계(Relationship)로 구분한다.  ü 시스템 관점에서 본 물리적 구성 요소는 비트(Bit)  바이트(Byte)  블록(Block) 등으로 구분할 수 있다.  (2) 개체(Entity)  1) 개체란? - DB가 저장하는 유형  무형의 정보 대상으로  존재하면서 서로 구별될 수 있는 요소이다. 2) 개체의 특징 - 파일 시스템에서 레코드(Record)에 대응한다. - 단독으로 존재 가능하고  정보로서의 역할이 가능하다. - 하나 이상의 속성(Attribute)으로 구성된다. 예) 개체 - 학생 속성 - 학번  이름  학과 등 DB의 개념적 구성 요소 DB(디비)는 개념적으로 개체와 관계하는 두 개의 구성요소로 구성되며  개체는 하나 이상의 속성으로 구성됩니다. 개체와 관계에 대해서는 뒤에서 보다 자세히 학습하도록 하겠습니다.  ,1
DB 개요 20 DB의 개념적 구성 요소 3) 개체의 종류 ① 유형의 개체 : 사람  집 등 물리적으로 존재하는 개체를 의미한다. ② 무형의 개체 : 인사  급여  교과목 등 개념적으로 존재하는 개체를 의미한다. 4) 속성(Attribute)이란? - 개체의 특성을 나타내는 요소로  이름을 가진 정보의 가장 작은 논리적인 단위이다. 5) 속성의 특징 - 파일 시스템에서 데이터 항목(Data Item) 혹은 필드(Field)에 대응한다. - 단독으로 존재할 때는 대개 무의미하다. ,1
DB 개요 21 (3) 관계(Relationship) 1) 관계란? - 일반적으로 개체들 간의 의미 있는 연결 또는 연관성을 의미하는 요소이다. 2) 관계의 특징 - 관계도 하나의 개체로 간주될 수 있다. - 속성 관계와 개체 관계로 세분할 수 있으며  그냥 ‘관계’라고 하면 ‘개체 관계’를 의미한다. 3) 관계의 유형 ① 일 대 일(1 : 1) : 한 개 개체가 한 개 개체와 연관되어 있는 유형이다. ② 일 대 다(1 : n) : 한 개 개체가 여러 개체와 연관성이 있는 유형이다. ③ 다 대 다(m : n) : 여러 개체가 여러 개체와 연관성이 있는 유형이다. DB의 개념적 구성 요소 ,1
DB 개요 22 4. DB의 저장 구조 DB의 구조 (1)  DB의 저장 구조 구분 - 물리적 저장 장치 위에 저장된 DB의 저장 구조를 사용자 관점에서 본 논리적 구조와 시스템(저장 장치) 관점에서 본 물리적 구조로 구분할 수 있다.  (2)  DB의 논리적 구조 - 물리적 저장 장치 위에 저장된 DB의 저장 구조를 사용자 관점에서 본 것으로  사용자가 생각하는 데이터의 구조를 표현한 것이다.  (3)  DB의 물리적 구조 - 물리적 저장 장치 위에 저장된 DB의 저장 구조를 시스템(저장 장치) 관점에서 본 것으로   디스크와 같은 저장 장치에 저장되는 데이터의 실제 구조를 표현한 것이다.   ,1
DB 개요 23 DB의 구조 [DB의 논리적 구조와 물리적 구조]  (사용자 관점)  (저장 장치 관점)  ,1
DB 개요 1. 데이터베이스(DB)의 정의와 함축된 개념 DB는 어느 한 조직의 다양한 응용 프로그램들이 공동으로 사용하는 데이터들을 통합하여 저장한 운영 데이터의 집합으로 정의할 수 있으며  다음과 같은 개념을 함축하고 있다.  ① DB는 한 조직의 여러 응용 프로그램에서 공동으로 사용하는 공용 데이터(Shared Data)이다. ② DB는 여러 부서에서 사용하는 데이터를 한 곳에 모아서 공동으로 관리하는 통합된 데이터 (Integrated Data)이다. (최소한의 중복만 허용) ③ DB는 컴퓨터가 접근할 수 있는 저장 매체(디스크 같은)에 저장된 데이터(Stored Data)이다. ④ DB는 조직의 운영에 꼭 필요한 데이터를 저장한 운영 데이터(Operational Data)이다. 24 학습 요약 및 정리 학습 요약 및 정리 2. 데이터베이스의 특징 ① 동시 공유(Concurrent Sharing) ② 지속적인 변화(Continuous Evolution) ③ 실시간 접근성(Real-Time Accessibility) ④ 내용에 의한 참조(Content Reference) ⑤ 데이터베이스 관리 시스템(Database Management System: DBMS)에 의한 관리 프린트 하기 다운로드 ,1
DB 개요 3. 데이터베이스의 개념적 구성 요소 1) 개체(Entity) - DB가 표현하려고 하는 유형  무형의 정보 대상으로  존재하면서 서로 구별될 수 있는 요소이며   파일 시스템에서 레코드에 대응하는 것으로  단독으로도 정보로서의 역할이 가능하며  하나 이상의 속성(Attribute)으로 구성된다.   속성은 개체의 특성을 나타내는 요소로  이름을 가진 정보의 가장 작은 논리적인 단위 이다. 2) 관계 (Relationship) - 일반적으로 개체들 간의 의미 있는 연결 또는 연관성을 의미하는 요소로서   관계도 하나의 개체로 간주될 수 있으며  일 대 일(1 : 1)  일 대 다(1 : n)   다 대 다(m : n)의 유형으로 구분된다.  25 학습 요약 및 정리 학습 요약 및 정리 ,1
