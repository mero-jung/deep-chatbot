content,intent
2016-09-02 1 데이터베이스 데이터베이스 2 회차 : DBMS 개요 김 은 경 DBMS 개요 2 학습목표 학습에 앞서 학습목표 동기유발 & 학습목표 학습내용 1. DBMS 이해하기 학습목표 2. ANSI/SPARC  구조와 데이터 독립성 1. DBMS가 무엇이며  궁극적인 목적이 무엇인지 설명할 수 있다. 2. DBMS의 필수 기능을 나열할 수 있다.     1. ANSI/SPARC의 3 단계 DB 구조를 설명할 수 있다.  2. ANSI/SPARC 구조와 스키마의 관련성을 설명할 수 있다.  3. 데이터 독립성에 대해 설명할 수 있다.  ,1
2016-09-02 2 DBMS 개요 3 Lesson. DBMS 이해하기 1. DBMS란?  2. DBMS의 발전 배경 3. DBMS의 필수 기능과 장단점 4. DBMS의 역사 DBMS의 이해하기 DBMS 개요 4 DBMS란?  * 데이터 독립성 : 응용 프로그램 에 영향을 주지 않고 DB의 구조 를 변경할 수 있는 것 1. DBMS란?  (1) DBMS(Database Management System   데이터베이스 관리시스템)의 정의 - DBMS는 DB 관리자  DB 사용자  그리고 응용 프로그램과 DB 사이의 중재자로서  데이터베이스에 대한 모든 접근을 처리해주는 소프트웨어 시스템이다. - DBMS는 DB의 정의와 조작  제어 기능을 제공하며  여러 사용자와 응용 프로그램이 DB를 공용할 수 있도록 관리해 주는 소프트웨어 시스템이다. (2) DBMS의 궁극적인 목적 - 응용 프로그램이 데이터에 종속되지 않는 데이터 독립성(Data Independency)을 제공하는 것이 DBMS의 궁극적인 목적이다. - 즉  DB의 구조를 변경해도 응용 프로그램에 영향을 주지 않고  반대로 응용 프로그램을 변경해도 DB에 영향을 주지 않도록 하는 것이 목적이다. DBMS DB DB 관리자 DB 사용자 응용 프로그램 ,1
2016-09-02 3 DBMS 개요 5 2. DBMS의 발전 배경 (1)  사회적 요구 - 정보처리 시스템의 활용 분야가 점차 다양해지면서  대량의 공용 데이터를 기초로 효율적인 “데이터 검색”을 위주로 하는 데이터베이스 시스템에 대한 요구가 등장하였으며   이러한 요구는 사칙연산 등을 기본으로 하는 “데이터 처리” 위주의 파일 처리 시스템으로는 만족시킬 수 없으며  따라서 DB 구축 및 관리를 지원하는 다양한 DBMS가 등장하게 되었다. (2)  기술적 발전 ① 저렴한 고속 자기디스크(Magnetic Disk)의 실용화로  대량 정보 저장 및 빠른 검색 지원이 가능하다. ② 데이터 통신 기술의 발전으로 빠른 정보 전송이 가능하여  데이터의 동시 공유가 가능하다. DBMS의 발전 배경 DBMS가 발전하게 된 배경은 사회적인 요구와 이를 수용할 수 있는 기술적인 발전이 조화를 이루었기 때문이라고 할 수 있습니다.  DBMS 개요 6 [보충 학습]  파일 처리 시스템 (1)  파일 처리 시스템이란?  - 각각의 응용 프로그램이 자신의 데이터를 별도로 파일 형태로 관리하는  파일 중심의 데이터 처리 시스템을 의미한다.  (2)  파일 처리 시스템의 특징 - 응용 프로그램과 데이터 간에 상호 의존성이 있다. 즉  대부분의 경우 응용 프로그램과 데이터 파일이 1 : 1로 대응한다.   à 따라서  데이터 종속성(Data Dependency) 및 데이터 중복성(Redundancy)이 유발된다. [보충 학습] (1) 데이터 종속성 – 데이터 파일 의 구성 방법이나 접근 방법을 변경하면  관련 된 응용 프로그램도 변 경해야 하는 것 (2) 데이터 중복성 - 내용이 같 은 데이터가 한 시스템 내에 중복해서 저장  관 리되는 것 응용 프로그램 1 데이터 파일 1 응용 프로그램 2 데이터 파일 2 응용 프로그램 n 데이터 파일 n . . .  . . .  [파일 처리 시스템의 응용 프로그램과 데이터 파일의 일대일 관련성] ,1
2016-09-02 4 DBMS 개요 7 (3) 파일 처리 시스템의 단점 ① 일관성(Consistency) 유지의 어려움 - 데이터의 중복으로 인해 데이터의 동일성 유지가 어렵다. - 중복된 데이터의 변경 시점에 따라 동일한 데이터의 값이 일치하지 않을 수 있다. ② 보안(Security) 유지의 어려움 - 데이터의 중복 관리로 인해 동일한 수준의 보안 유지가 어렵다. ③ 경제성 저하 - 중복된 저장 및 갱신 작업으로 인해 저장 공간 및 갱신 비용이 높아진다. ④ 데이터 무결성(Integrity) 유지의 어려움 - 중복 저장에 따른 관리 분산으로 데이터의 정확성 유지가 어렵다. ⑤ 동시 공용(Concurrent Sharing)의 어려움 - 드물게 하나의 데이터 파일을 여러 응용 프로그램이 공용한다 해도  한 프로그램이 데이터 파일을 사용하는 동안에는 다른 응용 프로그램이 그 데이터 파일에 접근할 수 없다. [보충 학습]  DBMS 개요 8 DBMS의 필수 기능과 장단점 3. DBMS의 필수 기능과 장단점 (1) DBMS의 필수 기능 ① 데이터 정의(Definition) 기능 - 다양한 응용 프로그램과 DB가 서로 인터페이스 할 수 있는 수단을 제공한다. - 하나의 저장된 DB를 기초로 여러 사용자와 응용 프로그램의 다양한 데이터 요구를 지원할 수 있도록 DB 구조를 정의하는 기능을 제공한다. ② 데이터 조작(Manipulation) 기능 - 사용자와 DB 간의 인터페이스를 위한 수단을 제공한다. - DB에 저장된 데이터의 검색  삽입  삭제  갱신 등과 같은 DB 연산을 처리하는 기능을 제공한다. ③ 데이터 제어(Control) 기능 - 공용으로 관리되는 DB의 내용을 정확하고 안전하게 유지할 수 있도록  다음과 같은 3가지 제어 기능을 제공한다. a) 데이터의 삽입  삭제 등 DB 변경 시에 데이터의 무결성 및 일관성 유지 기능 b) 권한이 부여된 사용자만이 허용된 데이터에 접근할 수 있도록 접근 권한 검사 기능 c) 여러 사용자가 DB에 동시에 접근할 수 있도록 동시성(Concurrency) 제어 기능 ,1
2016-09-02 5 DBMS 개요 9 DBMS의 필수 기능과 장단점 (2)  DBMS의 장점 ① 데이터의 동시 공유가 가능하다. - DBMS의 동시성 제어 (Concurrency  Control) 기능 때문에 동일한 데이터를 여러 응용 프로그램이 동시에 사용할 수 있다. 동일한 데이터를 여러 프로그램이 동시에 검색할 수는 있지만   삭제 또는 갱신은 한 프로그램만 하도록 제어하는 것 ② 데이터 중복이 최소화된다.  - 검색의 효율성을 위해서 불가피한 최소한의 중복(Minimal Redundancy)을 허용하므로   파일 처리 시스템과 비교하면 중복이 최소화된다.  ③ 데이터의 무결성 유지가 용이하다.  - DBMS의 유효성 검사 기능 때문에 DB에 허용되지 않는 값이나 부정확한 값이 삽입되지 않게 되므로 데이터의 정확성을 유지할 수 있다.  ④ 데이터의 일관성 유지가 용이하다. - DBMS가 데이터의 중복을 제어하기 때문에 데이터들 간의 불일치성이 발생하지 않는다. [관련 학습] 최소한의 중복이란? - 1회차. 2. 데이터베이스란? -> DBMS 개요 10 DBMS의 필수 기능과 장단점 ⑤ 프로그램과 데이터 간의 독립성을 유지할 수 있다. - 데이터와 응용 프로그램이 분리됨으로써  데이터의 구조 변경으로 인해 응용 프로그램을 수정해야 하는 경우가 많지 않다.  ⑥ 데이터의 보안이 보장된다. - DB가 중앙집중식으로 관리되고  DBMS의 DB 접근 권한 통제 기능으로 인해  데이터에 대한 접근이 효율적으로 통제될 수 있다.  ⑦ 데이터의 표준화 달성이 가능하다. - 범 기관적으로 데이터의 형식이나 내용  문서화 양식 등과 관련해서 표준화 시행이 용이하다.  사용자에게 DB 접근 권한 또는 테이블 접근 권한 등을 부여할 수 있음 ,1
2016-09-02 6 DBMS 개요 11 DBMS의 필수 기능과 장단점 (3) DBMS의 단점 ① 운영비가 증가한다.  - DBMS 및 추가적인 하드웨어 구입 비용과 별도의 신규 채용 또는 기존 직원 교육비 등 많은 운영비가 요구된다.  ② 데이터 처리가 복잡하다.  - DB는 한 조직의 다양한 응용 프로그램을 고려해서 구축  관리되므로 단일 응용 프로그램만을 위한 데이터 파일보다는 데이터 처리가 복잡할 수 있다.  ③ 백업(Backup)과 복구(Recovery)가 복잡하다.   - 여러 사용자가 공용하므로 장애 발생 시 정확한 원인을 파악하기 어려우므로   미리 백업 및 복구 계획을 아주 정교하게 수립해야 한다.  ④ 시스템이 장애에 취약하다.      - 데이터가 한 곳에 통합되어 있으므로 일부의 장애가 시스템 전체에 영향을 미칠 수 있으며  데이터가 중앙집중적으로 관리되므로 해킹을 당하는 경우 피해가 더 심각할 수 있다. DBMS 개요 12 DBMS의 필수 기능과 장단점 4. DBMS의 역사 (1)  제 1 세대 DBMS - 60년대 초반부터 70년대 중반까지 네트워크 데이터 모델과 계층 데이터 모델을 기반으로 한 DBMS가 해당된다.  ① IDS(Integrated Data Store) - 최초의 범용 DBMS  - 1960년대 초 GE(General Electric)사의 찰스 바흐만(Charles Bachman)이 설계함 - 네트워크 데이터 모델(Network Data Model)의 시초 ② IMS(Information Management System) DBMS - 1960년대 후반 IBM이 개발한 것으로  현재도 사용되고 있음 - 계층 데이터 모델(Hierarchical Data Model)의 시초 ③ 1970년대 초에는 많은 대형 컴퓨터 회사들이 네트워크 데이터 모델과 계층 데이터 모델을 기반으로 DBMS를 자체 제작하여 판매하기 시작함 ,1
2016-09-02 7 DBMS 개요 13 DBMS의 필수 기능과 장단점 (2)  제 2 세대 DBMS - 70년대 후반에 등장해서 80년대 주류가 된  관계 데이터 모델(Relational Data Model)을 기반으로 한 DBMS가 해당된다.  ① 관계 데이터 모델(Relational Data Model) - IBM 산호세 연구소의 코드(E. F. Codd) 박사가 제안한 모델 - 관계 DB(Relational Database) 이론의 기초가 됨 - 1980년대 DBMS의 주류가 되어 계속 확장됨 ② SQL(Structure Query Language) - IBM이 관계 DBMS의 일부로 개발한 DB 언어 - 세계 표준 데이터베이스 언어가 됨 ③ PC 기반의 DBMS 등장 - Access  FoxPro  dBase  Paradox  SQL Server 등 ④ 주요 상용 DBMS 등장 - DB2  Oracle  Ingres  Sybase  Informix 등 DBMS 개요 14 DBMS의 필수 기능과 장단점 (3)  제 3 세대 DBMS - 80년대 후반부터 새롭게 출현한 객체 DBMS나 객체-관계 DBMS 가 해당된다. ① 사용자의 DB 응용에 대한 복잡성(complexity)이 증대됨 - 이미지 및 동영상 처리 및 관리  공간 및 시간 계열(Spatial & Time Series) 데이터 처리   데이터 마이닝(Data Mining) 등 ② 사용자의 요구에 대처하기 위해 새로운 데이터 모델을 기반으로 하는 DBMS 출현 - 객체 DBMS(ODBMS: Object DBMS) : O2  ObjectStore  GemStone 등 - 객체-관계 DBMS(ORDBMS: Object-Relational DBMS) : 오라클(Oracle) 8.X(1997년) 이후 버전  UniSQL  Illustra 등 ü 현재는 제 2 세대 DBMS와 제 3 세대 DBMS가 공존하고 있으며  4세대 기술이 개발 중임 ,1
2016-09-02 8 DBMS 개요 15 Lesson. ANSI/SPARC 구조와 데이터 독립성 1. ANSI/SPARC 구조 이해 2. ANSI/SPARC 3 단계 구조의 구성 3. ANSI/SPARC 구조와 스키마 4. 데이터 독립성 ANSI/SPARC 구조와 데이터 독립성 DBMS 개요 16 1. ANSI/SPARC 구조 이해 ANSI/SPARC 구조 이해 (1) ANSI/SPARC란? - ANSI/SPARC(American National Standards Institute  Standards Planning And Requirements Committee)는 미국의 컴퓨터 및 정보처리에 관한 표준화 위원회이다.  (2) ANSI/SPARC 구조(Architecture)란? - DBMS의 구현을 위한 추상적인 설계 표준으로서  DB에 대한 여러 사용자의 관점과 DB가 실제로 표현되는 방식(즉  물리적 관점)을 분리시킬 수 있도록  DB 구조를 크게 외부 단계  개념 단계   내부 단계라는 3개 단계로 구분한 구조이다.  - 1978년 ANSI/SPARC에서 처음 제안했기 때문에 ANSI/SPARC 구조라 칭하며   그냥 “3 단계(또는 3 계층) DB 구조(3-level DB Architecture)“ 라고도 칭한다.  - 현재 대부분의 상용 DBMS는 1978년에 제안된 ANSI/SPARC 구조를 기반으로 하고 있다.  ,1
2016-09-02 9 DBMS 개요 17 ANSI/SPARC 구조 이해 ANSI(엔씨)/SPARC(스파크)의 3(삼) 단계 DB(디비) 구조에 대해서는 뒤에서 차근차근 설명하도록 하겠습니다.  사용자 관점 1 사용자 관점 2 사용자 관점 3 사용자 관점 n . . .  외부 단계 개념 단계 사용자 공동체의 관점 저장 장치 관점 저장 DB 내부 단계 [ ANSI/SPARC 3 단계 구조(Three-level Architecture) ] 물리 단계 외부/개념 사상 (응용 인터페이스) 개념/내부 사상 (저장 인터페이스) 외부 스키마 개념 스키마 내부 스키마 물리 단계(Physical level)는 DBMS의 지시에 따라 운영체제가 관리하 므로 DB 구조에는 포함시키지 않았음. 물리적 단계는 디스크와 같은 저장장치에 데이터를 실제로 저장하는 기법을 다루게 됨 DBMS 개요 18 ANSI/SPARC 구조 이해 (3) ANSI/SPARC 구조의 주요 목적 - DB 구조를 3 단계로 구분한 주요 목적은 DB에 대한 다양한 사용자의 관점과 DB가 실제로 표현되는 방식(즉  물리적 관점)을 분리시키는 것이다.  à 이런 구분을 통해서 응용 프로그램과 데이터 간의 독립성을 제공할 수 있다.  à 즉  사용자는 DB의 내부 구조에 대해 알지 못해도 DB를 사용할 수 있고   DB 관리자는 응용 프로그램에 영향을 주지 않고 DB 구조를 변경할 수 있다.   ,1
2016-09-02 10 DBMS 개요 19 2. ANSI/SPARC 3 단계 구조의 구성 (1) 외부 단계(External level) - DB에 관한 개별 사용자의 관점(View)으로서  각 사용자나 응용 프로그래머가 생각하는 개인적 DB 구조를 의미한다. - 예: 은행 DB에 접근하는 개인 고객이나 창구의 직원  신용카드 회사 직원은 각자 전체 DB의 일부분에만 관심이 있으며  각자 생각하는 DB 구조가 다를 수 있다. - 외부 단계에서 다양한 개별 사용자나 응용 프로그램이 필요로 하는 데이터 구조를 정의한 것을 외부 스키마(External Schema)라고 하며  외부 스키마는 여러 개 존재할 수 있다. (2) 개념 단계(Conceptual level) - DB에 관한 사용자 공동체의 관점  즉 한 조직 전체를 위한 DB의 논리적 구조를 의미한다. - 개념 단계에서 범 기관적 입장에서 전체 DB를 정의한 것을 개념 스키마(Conceptual Schema)라고 하며  개념 스키마는 단 하나만 존재한다. ANSI/SPARC 3 단계 구조의 구성 * 스키마(Schema) – DB 구조 (Structure)와 제약조건 (Constraints)을 기술한 것 - 확인 버튼 클릭하면  다음 페이지의 그림 표시 확인 DBMS 개요 20 ANSI/SPARC 3 단계 구조의 구성 은행고객  은행창구 직원  신용 카드 회사직원의 모습을 각기 다르게 표현해 주세요! 자신의 개인 정보  은행 잔고  입출금 내역  … 은행 고객 모든 고객의 잔고 및 입출금 내역  예금 상품 정보  …  은행창구 직원 모든 고객의 신용 정보 및 카드 사용 내용  카드 발급 기준  …   신용카드 회사직원 은행 DB [ 외부 단계에서 각 사용자가 생각하는 DB의 구조 ] [외부 단계 예제 확인]  ,1
2016-09-02 11 DBMS 개요 21 (3) 내부 단계(Internal level) - DB에 관한 물리적 저장 장치 관점  즉 DB에 어떤 데이터가 어떻게 저장되는지를 표현하는 저장 구조를 의미한다. - 실제로 저장된 내부 레코드의 형식  인덱스(Index) 유무  저장 데이터 항목의 표현 방법 등을 포함한다. - 내부 단계에서 DB의 물리적 데이터 구조를 정의한 것을 내부 스키마(Internal Schema)라고 하며  내부 스키마도 단 하나만 존재한다.  ü 내부 단계에서 특정 물리적 저장 장치를 직접 다루지는 않으며  실제로 물리 단계 보다 한 단계 위에 있다.   ü 물리 단계(Physical level)는 DBMS의 지시에 따라 운영체제가 관리한다.  ANSI/SPARC 3 단계 구조의 구성 DBMS 개요 22 (4) 외부/개념 사상(External/Conceptual Mapping) - 외부 스키마와 개념 스키마 간의 대응 관계를 정의한 것으로    응용 인터페이스(Application Interface)라고도 칭한다.  - 개념 스키마가 변경되어도 응용 인터페이스만 수정해 주면  외부 스키마에 아무런 영향을 미치지 않게 된다. 즉  응용 프로그램을 변경할 필요가 없다.  (5) 개념/내부 사상 (Conceptual/Internal Mapping) - 개념 스키마와 내부 스키마 간의 대응 관계를 정의한 것으로   저장 인터페이스(Storage Interface)라고도 칭한다. - 부득이 내부 스키마가 변경되어도 저장 인터페이스만 수정해 주면  개념 스키마에 아무런 영향을 미치지 않게 된다.  ANSI/SPARC 3 단계 구조의 구성 ,1
2016-09-02 12 DBMS 개요 23 3. ANSI/SPARC 구조와 스키마 (1) 스키마(Schema)란? - DB의 구조(Structure) 즉  개체와 속성  관계를 포함하는 논리적 정의와 제약조건(Constraints)을 기술한 것을 의미한다.  (2) ANSI/SPARC 3단계 구조와 스키마 구분 ANSI/SPARC 구조와 스키마 단계 스키마 구분 스키마 특징 외부 단계 외부 스키마 (External Schema)  - 사용자 개개인의 관점에서 정의한 DB 스키마 - 여러 개 존재함 - 서브스키마(Subschema)라고도 칭함 개념 단계 개념 스키마 (Conceptual Schema)  - 범 기관적인 관점에서 정의한 DB 스키마 - 모든 외부 스키마가 요구하는 전체적인 DB  구조와 제약조건을 포함함 - 단 하나만 존재함 - 그냥 스키마(Schema)라고도 칭함 내부 단계 내부 스키마 (Internal Schema) - 저장 장치 관점에서 정의한 DB 스키마 - 개념 스키마에 대한 저장구조를 정의한 것 - 단 하나만 존재함 DBMS 개요 24 (3)  스키마 작성 사례 ANSI/SPARC 구조와 스키마 STD 학번 integer(8) 이름 char(10) 학과 char(12)    지도교수 integer(8) 학생 학번 NUMBER(8)  이름 VARCHAR(20) 학과 VARCHAR(12)    학년 VARCHAR(1)   지도교수 NUMBER(8)  주소 VARCHAR(30) 성적 NUMBER(5)  STUDENT 학번 INT 성명 CHAR(10)  소속 CHAR(12) 학점 FLOAT      교무처에서 본 학생 개체의 외부 스키마 2 STORED_STUDENT             LENGTH = 88  prefix              BYTE(4)         OFFSET = 0 ID                   BYTE(8)         OFFSET = 4         INDEX = STDINDX Name              BYTE(20)       OFFSET = 12 Dept BYTE(12)       OFFSET = 32  Year                BYTE(1)         OFFSET = 44  Advisor            BYTE(8)         OFFSET = 45 Address           BYTE(30)         OFFSET = 53  Grade             BYTE(5)       OFFSET = 83 학생 개체의 개념 스키마 학생 개체의 내부 스키마 학생처에서 본 학생 개체의 외부 스키마 1 ,1
2016-09-02 13 DBMS 개요 25 4. 데이터 독립성 데이터 독립성 (1) 데이터 독립성(Data Independency)이란?  - 응용 프로그램과 데이터가 서로 종속되지 않는 것  즉 서로 영향을 미치지 않도록 하는 것을 의미한다.  - 즉  DB의 논리적 구조나 물리적 구조가 변경되어도 응용 프로그램에 영향을 주지 않는 것을 의미하며   논리적 데이터 독립성과 물리적 데이터 독립성으로 구분할 수 있다.   (2) 논리적 데이터 독립성(Logical Data Independency)  - 응용 프로그램에 영향을 주지 않고 DB의 논리적 구조(개념 스키마)를 변경할 수 있는 것을 의미한다.  - 즉  DB에 새로운 데이터 항목이나 레코드를 추가해도  현재 정의된 사용자 관점이나 사용되고 있는 응용 프로그램 가운데 직접 관련되지 않는 사용자 관점과 응용 프로그램은 영향을 전혀 받지 않는 것을 의미한다.  ü 어떻게 논리적 데이터 독립성이 보장되나? - 외부/개념 사상에 의해서 논리적 데이터 독립성이 보장된다.  - 즉  DBMS가 DB에 대한 하나의 논리적 데이터 구조를 기초로 여러 응용 프로그램이 요구하는 다양한 형태의 데이터 구조로 대응시킬 수 있기 때문이다.  DBMS 개요 26 데이터 독립성 (3)  물리적 데이터 독립성(Physical Data Independency)  - 응용 프로그램이나 DB의 논리적 구조에 영향을 주지 않고 DB의 물리적 구조(파일 편성  데이터 접근 방법 등)를 변경할 수 있는 것을 의미한다.  - 즉  새로운 저장 장치나 접근 방법의 개발로 인해 성능을 개선하기 위해 DB의 물리적 구조를 변경하게 되더라도  DB의 논리적 구조나 DB를 사용하는 응용 프로그램이 영향을 받지 않는 것을 의미한다.  ü 어떻게 물리적 데이터 독립성이 보장되나? - 개념/내부 사상에 의해서 물리적 데이터 독립성이 보장된다.  - 즉  DBMS가 DB에 대한 하나의 논리적 데이터 구조를 상이한 여러 가지 물리적 구조와 대응시킬 수 있기 때문이다.  ,1
2016-09-02 14 DBMS 개요 27 데이터 독립성 이 그림에서 내부 단계에 저장 DB(디비)가 두 개로 표시된 것은 변경 전후의 DB(디비)를 표현한 것으로  내부 단계에서 DB(디비)의 물리적인 데이터 구조를 정의한 내부 스키마는 단 하나만 존재할 수 있습니다.   응용 프로그램 1 응용 프로그램 2 응용 프로그램 n A B C D D E F A F D 논리적 구조 사상 물리적 구조 사상 A B C D E F G H A B C D E F G H ... 응용 프로그램의 데이터 구조 DB의 논리적 구조 DB의 물리적 구조 ...... ...... ... 외부 단계 개념 단계 내부 단계 A D G B E H C F ... [ANSI/SPARC 각 단계 간의 사상(Mapping) ] 외부/개념 사상 (응용 인터페이스) 개념/내부 사상 (저장 인터페이스) [변경전 저장 DB] [변경후 저장 DB] 논리적 데이터 독립성 보장 물리적 데이터 독립성 보장 DBMS 개요 1. DBMS의 정의와 궁극적인 목적 1) DBMS의 정의 - DB 관리자와 DB 사용자 및 응용 프로그램과 DB 사이의 중재자로서  데이터베이스에 대한 모든 접근을 처리해주는 소프트웨어 시스템이다. - DB의 정의와 조작  제어 기능을 제공하며  여러 사용자와 응용 프로그램이 DB를 공용할 수 있도록 관리해 주는 소프트웨어 시스템이다. 2) DBMS의 궁극적인 목적 - 응용 프로그램이 데이터에 종속되지 않는 데이터 독립성(Data Independency)을 제공하는 것이다. - 즉  DB의 구조를 변경해도 응용 프로그램에 영향을 주지 않고  반대로 응용 프로그램을 변경해도 DB에 영향을 주지 않도록 하는 것이 목적이다. 28 학습 요약 및 정리 학습 요약 및 정리 ,1
2016-09-02 15 DBMS 개요 29 학습 요약 및 정리 학습 요약 및 정리 2. DBMS의 필수 기능 ① 데이터 정의(Definition) 기능 - 다양한 응용 프로그램과 DB가 서로 인터페이스 할 수 있는 수단을 제공한다. - 하나의 저장된 DB를 기초로 여러 사용자와 응용 프로그램의 다양한 데이터 요구를 지원할 수 있도록 DB 구조를 정의하는 기능을 제공한다. ② 데이터 조작(Manipulation) 기능 - 사용자와 DB 간의 인터페이스를 위한 수단을 제공한다. - DB에 저장된 데이터의 검색  삽입  삭제  갱신 등과 같은 DB 연산을 처리하는 기능을 제공한 다. ③ 데이터 제어(Control) 기능 - 공용으로 관리되는 DB의 내용을 정확하고 안전하게 유지할 수 있도록  다음 3가지 제어 기능 을 제공한다. a) 데이터의 삽입  삭제 등 DB 변경 시에 데이터의 무결성 및 일관성 유지 기능 b) 권한이 부여된 사용자만 허용된 데이터에 접근할 수 있도록 접근 권한 검사 기능 c) 여러 사용자가 DB에 동시에 접근할 수 있도록 동시성(Concurrency) 제어 기능 DBMS 개요 3. ANSI/SPARC의 3단계 Three-level Architecture) DB 구조 - DBMS의 구현을 위한 추상적인 설계 표준으로서  DB에 대한 여러 사용자의 관점과 DB가 실제로 표현되는 방식(즉  물리적 관점)을 분리시킬 수 있도록  DB 구조를 크게 외부 단계  개념 단계   내부 단계라는 3개 단계로 구분한 구조이다.  30 학습 요약 및 정리 학습 요약 및 정리 사용자 관점 1 사용자 관점 2 사용자 관점 3 사용자 관점 n . . .  외부 단계 개념 단계 사용자 공동체의 관점 저장 장치 관점 저장 DB 내부 단계 [ ANSI/SPARC 3 단계 구조] 외부/개념 사상 (응용 인터페이스) 개념/내부 사상 (저장 인터페이스) 외부 스키마 개념 스키마 내부 스키마 ,1
2016-09-02 16 DBMS 개요 4. ANSI/SPARC의 3단계 DB 구조와 스키마의 관련성 31 학습 요약 및 정리 학습 요약 및 정리 단계 스키마 구분 스키마 특징 외부 단계 외부 스키마 (External Schema)  - 사용자 개개인의 관점에서 정의한 DB 스키마 - 여러 개 존재함 - 서브스키마(Subschema)라고도 칭함 개념 단계 개념 스키마 (Conceptual Schema)  - 범 기관적인 관점에서 정의한 DB 스키마 - 모든 외부 스키마가 요구하는 전체적인 DB  구조와 제약조건을 포함함 - 단 하나만 존재함 - 그냥 스키마(Schema)라고도 칭함 내부 단계 내부 스키마 (Internal Schema) - 저장 장치 관점에서 정의한 DB 스키마 - 개념 스키마에 대한 저장구조를 정의한 것 - 단 하나만 존재함 DBMS 개요 5. 데이터 독립성 1) 데이터 독립성(Data Independency)이란?  - 응용 프로그램이 데이터에 종속되지 않는 것을 의미한다.  - 즉  DB의 논리적 구조나 물리적 구조가 변경되어도 응용 프로그램에 영향을 주지 않는 것을 의미하며   논리적 데이터 독립성과 물리적 데이터 독립성으로 구분할 수 있다.  2) 논리적 데이터 독립성(Logical Data Independency)  - 응용 프로그램에 영향을 주지 않고 DB의 논리적 구조(개념 스키마)를 변경할 수 있는 것을 의미한다.  - 외부/개념 단계 간의 사상에 의해 보장된다.  3) 물리적 데이터 독립성(Physical Data Independency)  - 응용 프로그램이나 DB의 논리적 구조에 영향을 주지 않고 DB의 물리적 구조(파일 편성  데이터 접근 방법 등)를 변경할 수 있는 것을 의미한다.  - 개념/내부 단계 간의 사상에 의해 보장된다.  32 학습 요약 및 정리 학습 요약 및 정리 ,1
2016-09-02 17 DBMS 개요 33 쉼터 쉼터 나를 나타내주는 것은 나의 말이 아니라 나의 행동이다. 나를 나타내주는 것은 나의 말이 아니라 나의 행동이다. ,1
