데이터베이스 데이터베이스 - Story Board - 7 회차 : SQL 언어 ,1
SQL  언어 2 Lesson.  SQL 데이터 정의어와 데이터 제어어 1. SQL 언어 개요 2. SQL 데이터 정의어 3. SQL 데이터 제어어 SQL 데이터 정의어와 데이터 제어어 ,1
SQL  언어 3 SQL 언어 개요 SEQUEL – 1974년  IBM의 실험 적 관계 DB인 SYSTEM R 의 인터페이스로서 구현된 언어\이 다. 1. SQL 언어 개요 (1) SQL이란?   - “Structured Query Language(구조화된 질의어)”의 약자로  1974년 IBM 연구소에서 발표한 SEQUEL(Structured English QUEry Language)에서 유래한 데이터 언어이다. - 현재 미국표준연구소(ANSI)와 국제표준기구(ISO)에게 관계 DB의 표준 언어로 채택하고 있다. - 상용 DBMS인 IBM의 DB2와 SQL/DS뿐만 아니라  ORACLE  INFORMIX  SYBASE 등과 같은 거의 모든 회사에서 채택하고 있는 언어이다. (2) 표준 SQL의 변화 ①1986년 표준 언어로 채택: SQL-86 또는 SQL1이라 칭함 ② 1992년 개정: SQL/92  SQL-92 또는 SQL2라 칭함 ③ 1999년 개정: SQL3 또는 SQL-99라 칭함 ④ 2003년 개정: 가장 최신 버전으로  SQL4 또는 SQL-2003이라 칭하며   객체 개념을 지원하는 기능이 추가됨 ,1
SQL  언어 4 SQL 언어 개요 * 관계 대수 –원하는 데이터를 어떻게 검색할 것인가를 기술하 는 절차적 언어이다.  * 관계 해석 – 원하는 데이터만 명시하고  어떻게 검색할 지는 기술하지 않는 선언적 언어이다.  (3) SQL의 특징 ① 단순히 검색만을 위한 데이터 질의어가 아니라  데이터 정의어(DDL)  데이터 조작어(DML)  데이터 제어어(DCL)의 기능을 모두 제공하는 종합적인 DB 언어이다.  ② 관계 데이터 모델의 데이터 연산 언어인 관계 대수와 관계 해석을 기초로 하는 고급 데이터 언어 이다. ③ 데이터 연산에 대한 처리 과정은 명시하지 않고  데이터 연산의 결과만을 명시하는 비절차적 언어 즉  선언적 언어이므로  사용자 편의 중심의 언어이다.  ④ SQL의 표준화로 인해 상용 관계 DBMS들 간의 전환이 용이하다. ⑤ 단말기(Terminal)에서 단독으로 대화식 질의어로 사용할 수 있다.  ⑥ 자바  C/C++ 등으로 개발된 응용 프로그램에 삽입해서 사용할 수 있다. ⑦ 개개의 레코드(튜플) 단위로 처리하기 보다는 레코드의 집합 단위로 처리한다.   ⑧ 릴레이션  튜플  속성 등과 같은 관계 데이터 모델의 공식 용어 대신  테이블  행  열과 같은 일반적인 용어를 사용한다.  ,1
SQL  언어 5 SQL 데이터 정의어 2. SQL 데이터 정의어 (1) 데이터 정의어(DDL: Data Definition Language)란?   - DB 객체의 구조를 정의하거나 변경 또는 삭제하기 위해 사용하는 언어이다. (2) DB 객체란?   - 생성된 DB를 효율적으로 관리하고 동작하게 만드는 요소로서  논리적인 데이터 저장 구조이며  스키마 객체라고도 칭한다. - DB 객체의 종류에는 테이블(Table)  뷰(View)  시퀀스(Sequence)  인덱스(Index)  동의어 (Synonym) 등이 있다.   DB 객체 특징 테이블(Table) 행과 열로 구성된 기본적인 데이터 저장 영역의 기본 단위이다. 뷰(View) 하나 이상의 테이블 또는 다른 뷰로부터 유도된 논리적 관점에서의 가상 테이블이다. 시퀀스(Sequence) 자동으로 생성되는 유일한(Unique) 일련 번호로서  대개 기본 키 값을 생성하는데 사용된다. 인덱스(Index) DB 검색의 성능 향상을 위해서 만들어지는 데이터 구조이다.   동의어(Synonym) DB 객체의 복잡한 이름을 간단하게 해주기 위해 부여하는 별칭이다.  ,1
SQL  언어 6 SQL 데이터 정의어 (3)  데이터 정의어의 명령어 종류 DDL 명령어 역할 CREATE DB(또는 스키마) 및 DB 객체를 생성한다.  ALTER 기존의 DB 객체를 변경한다.  DROP  DB(또는 스키마) 및 DB 객체를 삭제한다.  (4) 테이블의 종류 종류 특징 기본 테이블 (Base Table) - CREATE TABLE 문으로 만들어지는 테이블 - DBMS의 파일로 생성되고 저장됨 가상 테이블 (Virtual Table) - CREATE VIEW 문으로 만들어지는 테이블 - 어떤 기본 테이블로부터 만들어지는 테이블 - 독자적으로 존재할 수 없음 임시 테이블 (Temporary Table) - 질의문 처리 과정의 중간 결과로 만들어지는 테이블 ,1
SQL  언어 7 SQL 데이터 정의어 (5) 기본 테이블 생성 1) CREATE TABLE 명령 - 새로운 테이블을 생성하는 명령이다. - 여러 가지 무결성 제약조건을 함께 지정할 수 있다. - 테이블 생성 권한을 가진 사용자만 사용할 수 있는 명령이다.   2) CREATE TABLE 명령의 일반 형식 CREATE  TABLE  기본테이블_이름 ( {열이름 데이터타입 [NOT NULL] [DEFAULT 값] }+ [PRIMARY  KEY  (열이름_리스트) ] {[UNIQUE (열이름_리스트) ]}* {[FOREIGN  KEY(열이름_리스트) REFERENCES 참조테이블_이름[(열이름_리스트)] [ON DELETE   옵션] [ON UPDATE  옵션]  ]} * [CONSTRAINT 제약조건이름]  [CHECK(조건식)] ); 참고하세요 #1 ,1
SQL  언어 8 참고하세요 [참고하세요]   SQL 명령의 형식을 기술할 때 사용하는 기호들 1) 중괄호({ }) : 값의 리스트(List)  즉 여러 값을 나열해야 함을 의미한다.  2) 대괄호([ ]) : 생략 가능함(Optional)을 의미한다.  3) + : 괄호 안의 내용이 1번 이상 반복될 수 있음을 의미한다.  즉  최소 1번은 나타나야 함을 의미한다.  4) * : 괄호 안의 내용이 0번 이상 반복될 수 있음을 의미한다.  즉  나타나지 않을 수도 있음을 의미한다.  5) 수직바(|) :  둘 중 하나를 선택하라는 ‘OR’의 의미이다. ,1
SQL  언어 9 SQL 데이터 정의어 3)  각 키워드의 기능 ① NOT NULL: 속성이 널 값을 가질 수 있는지 여부를 설정함 ② DEFAULT : 속성의 디폴트 값을 설정함 ③ PRIMARY KEY: 기본 키(개체 무결성 제약조건)를 설정함 ④ UNIQUE: 속성이 유일한 값을 가져야 한다는 무결성 제약조건을 설정함 ⑤ FOREIGN KEY: 외래 키(참조 무결성 제약조건)를 설정함  SQL에서는 참조된 테이블의 후보 키도 외래 키가 될 수 있음 ⑥ 옵션: NO ACTION  SET NULL  SET DEFAULT  CASCADE 가운데 하나를 설정함 예) ON DELETE SET NULL - 피참조 튜플(열 값)이 삭제되면  널 값으로 갱신하도록 설정함 예) ON UPDATE CASCADE - 피참조 튜플(열 값)이 갱신되면  이 튜플을 참조하는 튜플도 파급적으로 갱신하도록 설정함 ⑦ CONSTRAINT: 제약조건의 이름을 설정함 ⑧ CHECK(조건식): 삽입 또는 갱신 시에 만족해야 하는 무결성 제약조건을 설정함 ,1
SQL  언어 10 SQL 데이터 정의어 4)  대표적인 데이터 타입 데이터 타입 특징 NUMBER(p  s) 소수점을 포함해서 20자리까지의 숫자 기억 INT  INTEGER  SMALLINT 정수 기억 CHAR(n) 고정 길이 문자열 기억 VARCHAR(n)  VARCHAR2(n) 가변 길이 문자열 기억 DATE YY/MM/DD 형식의 날짜 기억 TIME hh:mm:ss 형식의 시간 기억 LONG  최대 2기가 바이트까지의 가변 길이 문자 기억 LOGICAL  논리 값(T/F) 기억 ,1
SQL  언어 11 SQL 데이터 정의어 5) 기본 테이블 생성 예제 - 사원  부서  근무라는 3개의 테이블을 생성한다.  CREATE   TABLE   사원 ( 사번 INTEGER  이름 CHAR(10)   NOT NULL  입사일 DATE  NOT NULL  호봉 INTEGER   휴대폰 CHAR(13)     PRIMARY KEY(사번)  UNIQUE(휴대폰)    CONSTRAINT  사원_unique_key);   테이블 확인 CREATE   TABLE   부서 ( 부서번호 INTEGER  부서명 CHAR(6)   NOT NULL  부서장 INTEGER  사무실 CHAR(4)   전화번호 CHAR(12)   PRIMARY KEY(부서번호)  UNIQUE(부서명  사무실  전화번호) );   테이블 확인 사번이 사원 테이블 의 기본 키이다. 휴대폰은 널 값을 가질 수는 있 지만  값이 있는 경우 반드시 유 일한 값을 가져야 하며  이 제약 조건에 사원_unique_key라는 이 름을 설정했다.  이름과 입사일은 널 값을 가질 수 없지 만  호봉은 널 값을 가질 수 있다.  ,1
SQL  언어 12 SQL 데이터 정의어 CREATE   TABLE   근무 ( 사원번호 INTEGER  부서번호 INTEGER  직책 CHAR(8)  PRIMARY KEY(사원번호  부서번호)  FOREIGN KEY(사원번호) REFERENCES 사원(사번) ON DELETE   CASCADE  ON UPDATE   CASCADE   FOREIGN KEY(부서번호) REFERENCES 부서(부서번호)  ON DELETE   CASCADE  ON UPDATE   CASCADE );  테이블 확인 근무 테이블의 기본 키는 사원번호와 부 서번호의 조합으로 정의했다.  사원번호는 사원 테 이블의 사번을 참조 하는 외래 키로 정 의했다.  ,1
SQL  언어 13 [테이블 확인] CREATE  TABLE(크리에이트 테이블) 명령으로 테이블을 생성하면  데이터가 하나도 없는 테이블의 구조만 만들어지며  여기에 제시한 세 개의 테이블은 뒤에서 배울 INSERT(인서트) 명령으로 초기 데이터를 삽입한 상태입니다.  [테이블 확인] 사원 테이블 부서 테이블 부서번호 부서명 부서장 사무실 전화번호 100 200 300 400 500 기획실 비서실 총무부 인사부 자재부 1101 1102 1201 1203 A402 A501 B311 B201 A102 02-233-1233 02-455-1221 041-567-3454 041-344-6776 02-458-45012 사번 이름 입사일 호봉 휴대폰 1101 1102 1103 1201 1202 1203 1312 1314 김정아 이기원 박영종 최강희 조현수 박제성 김민수 이정숙 1995-03-01 1997-01-01 2005-09-01 1994-02-01 2007-03-15 1999-09-01 2011-03-01 2011-03-01 20 18 15 21 14 17 11 11 010-3452-0022 011-3478-1287 010-3214-1234 010-1122-3344 010-5566-4321 019-3452-3457 011-2340-0023 010-3420-0991 근무 릴레이션 사번 부서번호 직책 1101 1102 1103 1201 1202 1203 1312 1314 100 200 200 300 300 400 100 400 부장 과장 대리 부장 대리 과장 사원 사원 ,1
SQL  언어 14 SQL 데이터 정의어 DROP  TABLE  기본테이블_이름 { RESTRICT |  CASCADE };  (6) 기본 테이블 삭제 1) DROP TABLE 명령 - 기존의 기본 테이블을 삭제하는 명령이다. - 테이블 구조와 함께 저장된 데이터와 인덱스까지 한꺼번에 삭제한다.  - 테이블을 생성한 사용자 또는 테이블 삭제 권한이 부여된 사용자만 사용할 수 있는 명령이다.   - 삭제 후 복구가 불가능하므로 신중하게 사용해야 한다.  2) DROP TABLE 명령의 일반 형식  RESTRICT 옵션: 이 기본 테이블을 참조하고 있는 뷰나 제약조건이 있으면  이 기본 테이블을 삭제할 수 없다.  CASCADE 옵션: 이 기본 테이블을 참조하고 있는 뷰나 제약조건이 있으면  그 뷰나 제약조건도 함께 모두 삭제한다.  ,1
SQL  언어 15 SQL 데이터 정의어 3) 기본 테이블 삭제 예제 - ‘취미’라는 이름의 테이블을 삭제하되  만약 이 테이블을 참조하고 있는 뷰나 제약조건이 있으면 함께 삭제한다.  DROP  TABLE  취미 CASCADE;  [참고]  테이블 구조는 남겨두고 저장된 데이터만 삭제하는 명령은 TRUNCATE TABLE 명령이다.  ,1
SQL  언어 16 SQL 데이터 정의어 (7) 기본 테이블 변경 1) ALTER TABLE 명령 - 기존의 기본 테이블의 구조를 변경하는 명령이다. - 구조 변경 허용 범위 :  ① 새로운 열을 추가할 수 있다. (ADD 절) ② 기존 열을 삭제할 수 있다.  (DROP 절)   (열 삭제는 오라클 8i 버전부터 지원함)  ③ 기존 열의 데이터타입을 변경할 수 있다. (MODIFY 절)  ④ 열에 대한 디폴트 값을 삭제하거나 새로 정의할 수 있다.  (MODIFY 절)   ⑤ 새로운 무결성 제약조건을 명시하거나 . 기존 무결성 제약조건을 삭제할 수 있다.  ,1
SQL  언어 17 SQL 데이터 정의어 ALTER  TABLE 기본테이블_이름 ([ADD 열이름 데이터타입] [DEFAULT 값] | [DROP 열이름] [무결성 제약조건] [RESTRICT | CASCADE] [MODIFY 열이름 [데이터타입] (DROP DEFAULT | SET DEFAULT  값)]); - 열을 삭제할 때는 반드시 RESTRICT나 CASCADE를 명시해야 한다.   RESTRICT 옵션: 이 열을 참조하고 있는 뷰나 제약조건이 있으며   이 열을 삭제할 수 없다.   CASCADE 옵션: 이 열을 참조하고 있는 모든 뷰나 제약조건을 함께 삭제한다.  2) ALTER TABLE 명령의 일반 형식 ,1
SQL  언어 18 SQL 데이터 정의어 3) 기본 테이블 변경 예제 ① 새로운 열 추가하기 - 사원 테이블에 최대 10 바이트의 가변 길이 문자열 타입의 ‘최종학력’ 열을 추가하고  디폴트 값을 ‘대졸’로 설정한다.  ② 기존 열 삭제하기 - 사원 테이블의 ‘호봉’ 열을 삭제하되  이 열을 참조하는 뷰나 제약조건이 있으면 함께 삭제하도록 한다.  ③ 기존 열의 데이터 타입 변경하기 - 사원 테이블의 ‘이름’ 열의 데이터 타입을 20바이트의 가변 길이 문자열로 변경한다.  ALTER TABLE   사원 MODIFY   이름 VARCHAR2(20); ALTER  TABLE   사원 DROP   호봉 CASCADE; ALTER TABLE   사원 ADD   최종학력 VARCHAR2(10)   DEFAULT  ‘대졸; ,1
SQL  언어 19 SQL 데이터 정의어 ④ 열의 디폴트 값 변경하기 - 사원 테이블의 ‘최종학력’ 열의 디폴트 값을 ‘고졸’로 수정한다.  ⑤ 무결성 제약조건 삭제하기 - 사원 테이블의 ‘휴대폰’ 열이 유일한 값을 갖도록 UNIQUE 옵션을 설정할 때 설정한 ‘사원_unique_key’라는 이름의 제약조건을 삭제한다.  ALTER TABLE   사원 DROP   CONSTRAINT 사원_unique_key; ALTER TABLE   사원 MODIFY 최종학력 SET  DEFAULT  ‘고졸; ,1
SQL  언어 20 SQL 데이터 정의어 3. SQL 데이터 제어어 (1) 데이터 제어어(DCL: Data Control  Language)란?   - DB 사용자의 권한을 제어하기 위해서 사용하는 언어이다. (2) 데이터 제어어의 명령어 종류 DCL 명령어 역할 GRANT 사용자에게 DB 객체에 대한 권한을 부여한다.  REVOKE 사용자에게 이미 부여된 DB 객체에 대한 권한을 취소한다.  (3) 권한 부여 1) GRANT  명령 - DB 관리자가 한 명 이상의 사용자에게 여러 개의 시스템 권한을 부여할 때 사용하는 명령이다.  2) GRANT 명령의 일반 형식 GRANT 시스템권한1[  시스템권한2  . . .] TO   사용자명1[   사용자명2   . . .]; GRANT 명령으로 객체의 소유자가 특정 객체 권한을 다른 사용자에게 부여할 수도 있는데  이 과정에서 는 자세한 설명은 생략함 ,1
SQL  언어 21 SQL 데이터 정의어 (4) 응용 프로그램 개발자가 가질 수 있는 시스템 권한의 종류 시스템 권한 설명 CREATE  SESSION 사용자가 DB로 접속할 수 있는 권한 CREATE  TABLE 사용자의 스키마에서 테이블을 생성할 수 있는 권한 CREATE SEQUENCE 사용자의 스키마에 시퀀스를 생성할 수 있는 권한 CREATE VIEW 사용자의 스키마에서 뷰를 생성할 수 있는 권한 CREATE  PROCEDURE 사용자의 스키마에 내장된 프로시저  함수  패키지를 생성할 수 있는 권한 (5) 권한 부여 사례 - DB 관리자가 ‘mkpark’ 및 ‘yhkim’ 사용자에게 테이블과 시퀀스  뷰를 생성할 수 있는 권한을 부여한다. GRANT CREATE  TABLE  CREATE SEQUENCE  CREATE VIEW  TO   mkpark    yhkim;    ,1
SQL  언어 22 SQL 데이터 정의어 (6) 권한 철회 1) REVOKE  명령 - 사용자에게 부여한 권한을 철회할 때 사용하는 명령이다.  2) REVOKE 명령의 일반 형식 (7) 권한 철회 사례 - DB 관리자가 ‘mkpark’ 사용자에게 부여한 테이블 및 뷰 생성 권한을 철회한다. REVOKE CREATE  TABLE   CREATE VIEW    FROM   mkpark;    REVOKE 시스템권한1[  시스템권한2  . . .] FROM   사용자명1[   사용자명2   . . .]; ,1
SQL  언어 23 Lesson.   SQL 데이터 조작어와 SQL 뷰 1. SQL 데이터 조작어 2. SQL 뷰 SQL 데이터 조작어와 SQL 뷰 ,1
SQL  언어 24 SQL 데이터 조작어 1. SQL 데이터 조작어 (1) 데이터 조작어(DML: Data Manipulation Language)란?   - 데이터의 검색 및 삽입  삭제  변경을 위해서 사용하는 언어이다. (2) 데이터 조작어의 명령어 종류 (3) SQL의 테이블과 관계 데이터 모델의 릴레이션과의 차이점 ① SQL의 테이블은 반드시 기본 키를 가져야 하는 것은 아니다. ② SQL의 한 테이블에는 동일한 행(레코드)이 중복될 수 있다.   검색할 때 ‘DISTINCT’ 옵션을 지정하면  동일한 행을 제거할 수 있다 DML 명령어 역할 SELECT DB 객체에서 데이터를 검색한다.  INSERT DB 객체에 데이터를 삽입한다.  DELETE DB 객체에서 데이터를 삭제한다.  UPDATE DB 객체의 기존 데이터를 변경한다.  ,1
SQL  언어 25 SQL 데이터 조작어 (4) 데이터 검색 1) SELECT  명령 - 테이블에서 데이터를 검색할 때 사용하는 명령이다. - 검색한 결과도 테이블이 되는 폐쇄적 성질을 갖고 있는 명령이다.  2) SELECT 명령의 일반 형식 SELECT [ALL | DISTINCT] { * | 열_리스트 [AS 열별칭]}  FROM        테이블_리스트 [WHERE     조건] [GROUP BY 열_리스트 [HAVING    그룹조건]] [ORDER BY  열_리스트 [ASC | DESC]]; SELECT 명령의 해석 순서 ⑤ ① ② ③ ④ ⑥ ① SELECT 문을 실행할 때  맨 먼저 검색할 데이터가 어떤 테이 블에 있는지를 알아야 하기 때문 에  FROM 절이 가장 먼저 해석 됨 ② 어떤 조건을 만족하는 열을 검 색해야 할지를 알기 위해  WHERE절이 두 번째로 해석됨 ③ 그룹에 대한 정보를 알기 위해 서 GROUP BY 절이 세 번째로 해석됨 ④ 그룹에 대한 조건을 알기 위해 서 HAVING 절이 네 번째로 해석됨 ⑤ 앞의 모든 조건을 만족하는 열을 검색하기 위해서 SELECT 절이 다섯 번째로 해석됨 ⑥ 검색된 열을 정렬하는 ORDER BY  절이 맨 마지막에 해석됨 ,1
SQL  언어 26 SQL 데이터 조작어 * 열 별칭(Alias) – 열 이름에 부 여하는 새로운 이름을 의미한다.   3) SELECT 명령의 구성 구성 기능 SELECT 절 검색할 하나 이상의 데이터 항목 즉  열 이름이나 열 별칭(Alias)을 기 술한다. ① ALL : 검색 결과에서 중복되는 행을 그대로 표시하도록 지정함 ② DISTINCT : 검색 결과에서 중복되는 행을 삭제하도록 지정함 ③ * : 테이블의 모든 열을 검색하도록 지정하는 와일드카드(Wildcard)  문자임 ④ AS 열별칭 :  열 이름에 새로운 이름을 부여하는 것으로  AS는 생략 해도 됨 FROM 절 검색할 테이블 이름을 기술한다.  WHERE 절 검색할 조건을 기술한다.  GROUP BY 절 그룹 질의를 수행할 열 이름을 기술한다. 즉  특정 열의 값이 동일한 행들을 그룹핑해서  각 그룹별로 한 행의 질의 결과를 생성할 때 사용한다.  HAVING 절 GROUP BY 절에 의해 구성된 그룹에 적용할 제한 조건을 기술한다.  ORDER BY 절 특정 열 값을 기준으로 질의 결과를 정렬할 때 기준이 되는 열 이름을 기술한다.  ① ASC : 오름차순(Ascending) 정렬을 지정함 (디폴트 값임)  ② DESC : 내림차순(Descending) 정렬을 지정함 ,1
SQL  언어 27 SQL 데이터 조작어 4) 데이터 검색 예제 - 앞의 기본 테이블 생성 예제에서 생성한 사원 및 근무 테이블에서 검색한다.  ① 모든 열 검색하기 - 사원 테이블의 모든 열의 내용을 검색한다.  ② 조건이 만족하는 모든 열 검색하기 - 사원 테이블에서 호봉이 11이라는 조건을 만족하는 사원의 모든 정보를 검색한다.  ③ 조건이 만족하는 특정 열만 검색 - 사원 테이블에서 호봉이 11이라는 조건을 만족하는 사원의 사번과 이름만을 검색한다.  SELECT   * FROM    사원 WHERE 호봉 = 11 ;  SELECT   * FROM    사원;  SELECT   사번   이름 FROM    사원 WHERE 호봉 = 11 ;  검색 결과 확인 검색 결과 확인 검색 결과 확인 ,1
SQL  언어 28 [검색 결과]  검색 결과-1 검색 결과-2 검색 결과-3 사번 이름 입사일 호봉 휴대폰 ------------------------------------------------------------ 1101              김정아 1995-03-10           20           010-3452-0022 1102              이기원 1997-01-01           18           011-3478-1287 1103              박영종 2005-09-01           15           010-3214-1234 1201              최강희 1994-02-01           21           010-1122-3344 1202              조현수 2007-03-15           14           010-5566-4321 1203              박제성 1999-09-01           17           019-3452-3457 1312              김민수 2011-03-01           11           011-2340-0023 1314              이정숙 2011-03-01           11           010-3420-0991 사번 이름 입사일 호봉 휴대폰 ------------------------------------------------------------ 1312              김민수 2011-03-01           11           011-2340-0023 1314              이정숙 2011-03-01           11           010-3420-0991 사번 이름 ------------------------- 1312 김민수 1314                     이정숙 ,1
SQL  언어 29 SQL 데이터 조작어 ④ 중복된 행을 제거하고 검색하기 - 현재 사원들이 근무하는 부서번호가 무엇인지 근무 테이블에서 검색한다.  ⑤ 행 정렬 검색하기 - 사원 테이블에서 입사일이 빠른 사람부터 출력하고  입사일이 같은 경우 사원번호가 더 큰 번호를 갖는 사원부터 출력한다.     SELECT   DISTINCT 부서번호 FROM    근무;      SELECT   사번   이름  입사일 FROM     사원 ORDER BY    입사일 ASC   사원번호 DESC;  검색 결과 확인 검색 결과 확인 ,1
SQL  언어 30 [검색 결과]  검색 결과-4 검색 결과-5 부서번호 ------- 100             200 300 400 사번 이름 입사일 ---------------------------------- 1201              최강희 1994-02-01 1101 김정아 1995-03-10            1102 이기원 1997-01-01            1203              박제성 1999-09-01     1103              박영종 2005-09-01            1202              조현수 2007-03-15        1314              이정숙 2011-03-01        1312              김민수 2011-03-01        오름차순(ASC)  내림차순(DESC)  ,1
SQL  언어 31 SQL 데이터 조작어 ⑥ GROUP BY 절을 이용해서 검색하기 - 사원_2 테이블에서 같은 부서에 근무하는 사원들의 평균 연봉을 계산해서 출력한다.  ⑦ HAVING 절을 이용해서 검색하기 - 사원_2 테이블에서 같은 부서에 근무하는 사원들의 평균 연봉을 계산해서 출력하되  평균 연봉이 5000 이상인 부서만 출력한다.  SELECT        부서번호   AVG(연봉)  AS 평균연봉 FROM          사원_2  GROUP BY 부서번호; SELECT        부서번호   AVG(연봉)  AS  평균연봉 FROM          사원_2  GROUP BY 부서번호 HAVING AVG(연봉) ≥ 5000 ; AVG: 평균을 계산해서 반환하는 그룹 함수 AS: 연봉의 평균을 계산한 열의 제목으로 ‘평균연봉’이라는 별칭을 부여함 부서번호가 같은 데이터들끼리 그룹을 생성함 그룹을 제한하는 조건을 명시할 때 사용하며   HAVING 절의 조건을 만족하는 그룹만 표시하게 됨 검색 결과 확인 검색 결과 확인 ,1
SQL  언어 32 SQL 데이터 조작어 검색 결과-6 부서번호 평균연봉 ------------------ 100                 4500 200                 5250 300                 5750 400                 3750  사원_2 테이블 사번 이름 입사일 부서번호 연봉 휴대폰 1101 1102 1103 1201 1202 1203 1312 1314 김정아 이기원 박영종 최강희 조현수 박제성 김민수 이정숙 1995-03-01 1997-01-01 2005-09-01 1994-02-01 2007-03-15 1999-09-01 2011-03-01 2011-03-01 100 200 200 300 300 400 100 400 7000 6000 4500 7500 4000 5500 2000 2000 010-3452-0022 011-3478-1287 010-3214-1234 010-1122-3344 010-5566-4321 019-3452-3457 011-2340-0023 010-3420-0991 검색 결과-7 부서번호 평균연봉 ------------------ 200                 5250 300                 5750 ,1
SQL  언어 33 SQL 데이터 조작어 (5)  데이터 삽입 1) INSERT  명령 - 기존 테이블에서 새로운 데이터(행)를 삽입할 때 사용하는 명령이다. - 삽입할 테이블 이름과 열 이름들  그리고 각 열의 값을 기술한다.   2) INSERT 명령의 일반 형식 ① 새로운 데이터 직접 삽입하기 ② 다른 테이블의 데이터를 복사해서 삽입하기 - 부속 질의문(SELECT 문)을 이용해서 검색한 결과를 복사해서 삽입한다.  3) INSERT 명령의 특징 ① VALUES 절에 열의 값을 명시하므로 한번에 하나의 행만 삽입할 수 있다.  ② 열 이름을 명시하지 않으면  테이블에 정의된 열의 순서대로 값을 나열해야 한다. INSERT  INTO  테이블_이름 [(열이름_리스트)] VALUES  (열값_리스트); INSERT  INTO  테이블_이름 [(열이름_리스트)] SELECT 문; ,1
SQL  언어 34 SQL 데이터 조작어 4) 데이터 삽입 예제 ① 새로운 데이터 직접 삽입하기 - 사원 테이블에 신입 사원 “이동문”의 데이터를 직접 삽입한다.  ② 다른 테이블의 데이터를 복사해서 삽입하기 - 사원_2 테이블의 데이터 가운데 100번 부서에 근무하는 사원의 사번과 이름 열의 값만 복사해서 ‘기획실_사원 ‘테이블에 삽입한다. (이때 기획실_사원 테이블은 미리 생성되어 있어야 함)  INSERT  INTO  사원(사번  이름  입사일  호봉  휴대폰) VALUES  (1411   ‘이동문’  2012-09-01  8  ‘010-8766-4889’); INSERT  INTO  기획실_사원(사번  이름) SELECT 사번  이름 ; FROM 사원_2; WHERE 부서번호 = 100; INSERT  INTO  사원 VALUES (1411   ‘이동문’  2012-09-01  8  ‘010-8766-4889’); 혹은 삽입 결과 확인 삽입 결과 확인 사원 테이블에 정의된 열의 순서와 VAULES 절에 명시 한 열 값의 순서가 동일하므 로  테이블 이름 뒤에 열 이 름 리스트를 생략함 ,1
SQL  언어 35 SQL 데이터 조작어 삽입 결과-1 사원 테이블 삽입 결과-2 사번 이름 입사일 호봉 휴대폰 1101 1102 1103 1201 1202 1203 1312 1314 1411 김정아 이기원 박영종 최강희 조현수 박제성 김민수 이정숙 이동문 1995-03-01 1997-01-01 2005-09-01 1994-02-01 2007-03-15 1999-09-01 2011-03-01 2011-03-01 2012-09-01 20 18 15 21 14 17 11 11 8 010-3452-0022 011-3478-1287 010-3214-1234 010-1122-3344 010-5566-4321 019-3452-3457 011-2340-0023 010-3420-0991 010-8766-4889 기획실_사원 테이블 사번 이름 1101 1312 김정아 김민수 ,1
SQL  언어 36 SQL 데이터 조작어 (6)  데이터 삭제 1) DELETE  명령 - 테이블에서 기존 데이터(행)를 삭제할 때 사용하는 명령이다. - 삭제할 데이터가 포함된 테이블 이름과 삭제 조건을 기술한다.   2) DELETE  명령의 일반 형식 3) 데이터 삭제 예제 ① 한 개의 데이터(행) 삭제하기 - 사원 테이블에서 사원번호가 1203인 사원을 삭제한다.  ② 복수 개의 데이터(행) 삭제하기 - 사원_2 테이블에서 부서번호가 200인 사원을 모두 삭제한다.  DELETE   FROM  테이블_이름 [WHERE  조건]; DELETE   FROM  사원 WHERE  사번 = 1203; DELETE   FROM  사원_2  WHERE  부서번호 = 200; ,1
SQL  언어 37 SQL 데이터 조작어 (7)  데이터 변경 1) UPDATE  명령 - 테이블에서 기존 데이터(행)를 변경할 때 사용하는 명령이다. - 변경할 데이터가 포함된 테이블 이름과 변경할 열 이름  변경 조건을 기술한다.   2) UPDATE 명령의 일반 형식 3) 데이터 변경 예제 ① 한 개의 데이터(행) 변경하기 - 사원 테이블에서 사원번호가 1202인 사원의 호봉을 15 호봉으로 변경한다.  ② 복수 개의 데이터(행) 변경하기 - 사원 테이블에서 호봉이 11인 사원의 호봉을 모두 12로 변경한다.  UPDATE   테이블_이름 SET {열이름 = 산술식}+ [WHERE  조건]; UPDATE   사원 SET 호봉 = 15 WHERE  사번 = 1202; UPDATE   사원 SET 호봉 = 12 WHERE  호봉 = 11; ,1
SQL  언어 38 2. SQL 뷰 SQL 뷰 (1)  뷰(View)란?  - 다른 테이블로부터 유도된 가상의 테이블(Virtual Table)로서  물리적으로 생성되지 않는 논리적인 테이블이다.  (2) 뷰의 특징 ① 논리적인 테이블이므로 실제로 물리적으로 생성되지 않으며  뷰의 정의만 시스템에 저장된다. ② 기본 테이블뿐만 아니라 다른 뷰를 기초로 생성할 수 있다. ③ 뷰 자체는 데이터를 직접 포함하지 않지만  창문 역할을 하는 뷰를 통해서 데이터의 검색과 삽입  변경이 가능하다. ④ 뷰에 대한 검색은 기본 테이블과 거의 유사하지만  뷰를 통한 삽입  삭제  변경은 일부 제약을 받는다.  ⑤ 외부 스키마는 뷰와 기본 테이블의 정의로 구성된다.  ⑥ 뷰의 기본이 되는 기본 테이블이 삭제(변경)되면  뷰도 자동으로 삭제(변경)된다. ⑦ 뷰는 ALTER 문을 사용해서 변경할 수 없으며  변경이 필요한 경우 삭제하고 다시 생성해야 한다.  ⑧ 뷰는 DROP문을 사용해서 삭제할 수 있다.  ,1
SQL  언어 39 삽입 SQL  (3)  뷰 사용의 장점 ① 보안을 위해서 DB에 대한 접근을 제한할 수 있다. - 사용자는 특정 테이블의 데이터 가운데 뷰로 정의된 특정 부분만을 보게 된다. ② 복잡한 질의를 단순한 질의로 변환할 수 있다. - 여러 테이블을 기초로 뷰를 생성하면 테이블 조인(Join)이 불필요하게 된다.  즉  주로 사용하는 정보만을 대상으로 데이터 조작을 수행할 수 있다. ③ 데이터 독립성을 허용한다.            - 테이블이 변경되어도 뷰는 그대로 유지할 수 있으므로  임시 사용자와 응용 프로그램에 대한 데이터 독립성을 제공할 수 있다. ④ 동일한 테이블에 대해서 다른 뷰를 생성할 수 있다. - 조건에 따라 데이터에 접근하는 사용자 그룹을 분류해서  각각 동일한 테이블의 다른 뷰를 기초로 데이터를 조작할 수 있게 한다.  (4)  뷰 사용의 단점 ① 뷰의 정의를 변경할 수 없다. - 변경이 필요한 경우 뷰를 삭제하고 다시 생성해야 한다.  ② 삽입  삭제  변경 연산에 제한이 많다. * 조인(Join) – 하나 이상의 테이 블로부터 필요한 데이 터를 검색하기 위한 일 종의 연산이다. ,1
SQL  언어 40 삽입 SQL  (5)  뷰의 종류 1) 단순 뷰(Single View) - 오직 하나의 테이블만을 기초로 생성된 뷰이다.. - 산술식 등에 의해 데이터가 조작된 경우를 제외하면  뷰를 통한 모든 DML 연산의 수행이 가능하다. 2) 복합 뷰(Complex or Join View) - 여러 테이블을 기초로 생성된 뷰이다. - 데이터 그룹핑 또는 그룹 함수를 사용해서 뷰를 생성할 수 있다.   - 뷰를 통한 모든 DML이 항상 가능한 것은 아니다. ,1
SQL  언어 41 삽입 SQL  (6)  뷰 생성 1) CREATE  VIEW  명령 - SELECT 문이 수행되어 가져온 열들로 구성된 뷰를 생성한다.  2) CREATE  VIEW  명령의 일반 형식 CREATE  VIEW  뷰_이름[(열_이름 리스트)] AS SELECT문 [WITH CHECK OPTION];  WITH CHECK OPTION : 삽입이나 변경할 때 뷰의 정의 조건을 검사해서 뷰에 의해 접근 가능한 행만 삽입 또는 변경될 수 있도록 지정함 3) 뷰 생성 예제 ① 단순 뷰 생성하기 - 사원_2 테이블에서 부서번호가 200인 사원 데이터의 사번과 이름  연봉  휴대폰만 포함하는 ‘비서실_사원’이라는 이름의 뷰를 생성한다. CREATE  VIEW  비서실_사원(사번   이름   연봉  휴대폰) AS    SELECT   사번   이름   연봉  휴대폰 FROM      사원_2 WHERE    부서번호 =  200;  뷰 확인 ,1
SQL  언어 42 삽입 SQL  ② 열 별칭을 사용해서 뷰 생성하기 - 사원_2 테이블에서 부서번호가 300인 사원 데이터의 사번과 이름  연봉  휴대폰만 포함하는 ‘총무부_사원’이라는 이름의 뷰를 생성하되   열 이름은 id. name  salary   cellphone으로 지정한다. CREATE  VIEW  총무부_사원(id   name   salary  cellphone) AS    SELECT   사번   이름   연봉  휴대폰 FROM      사원_2 WHERE    부서번호 =  300;  뷰 확인 ,1
SQL  언어 43 [뷰 확인]  뷰 확인-1 비서실_사원 뷰 사번 이름 연봉 휴대폰 1102 1103 이기원 박영종 6000 4500 011-3478-1287 010-3214-1234 뷰 확인-2 총무부_사원 뷰 id name salary cellphone 1201 1202 최강희 조현수 7500 4000 010-1122-3344 010-5566-4321 ,1
SQL  언어 44 삽입 SQL  (7)  뷰 삭제 1) DROP  VIEW  명령 - 기존의 뷰를 삭제한다.   2) DROP  VIEW  명령의 일반 형식 DROP VIEW  뷰_이름 [RESTRICT  | CASCADE]; 3) 뷰 삭제 예제 - 앞에서 생성한 총무부_사원 뷰를 삭제하되  이 뷰가 다른 곳에서 참조되고 있으면 삭제하지 않는다.  DROP  VIEW 총무부_사원 RESTRICT;   RESTRICT : 뷰가 다른 곳에서 참조되고 있지 않을 때만 제거함  CASCADE  : 뷰를 참조하는 다른 모든 뷰나 제약조건을 함께 제거함 ,1
SQL  언어 45 삽입 SQL  (8)  뷰 조작 1) 뷰 조작 연산의 한계점 - 기본 테이블에서 사용 가능한 검색(SELECT 명령)은 모두 사용할 수 있지만    삽입  삭제  변경은 제한적으로 사용 가능하다.  2) 삽입  삭제  변경이 허용되는 경우 - 뷰가 하나의 기본 테이블의 행과 열의 부분 집합으로 정의된 경우 3) 삽입  삭제  변경이 허용되지 않는 경우 ① 뷰의 열이 상수나 산술 연산자 또는 함수가 사용된 산술식으로 만들어진 경우 ② 그룹 함수(COUNT  SUM  AVG  MAX  MIN)를 사용해서 정의된 경우 ③ DISTINCT  GROUP BY  HAVING 절이 사용되어 정의된 경우 ④ 두 개 이상의 테이블이 관련되어 정의된 경우 ⑤ 변경할 수 없는 뷰를 기초로 정의된 경우 ,1
